d915e8333dd557ea4789be3952b54236
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _ReactNativeViewViewConfig = _interopRequireDefault(require("../../Components/View/ReactNativeViewViewConfig"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AndroidTextInputViewConfig = {
  uiViewClassName: 'AndroidTextInput',
  bubblingEventTypes: {
    topTextInput: {
      phasedRegistrationNames: {
        bubbled: 'onTextInput',
        captured: 'onTextInputCapture'
      }
    }
  },
  directEventTypes: {},
  validAttributes: _objectSpread(_objectSpread({}, _ReactNativeViewViewConfig.default.validAttributes), {}, {
    maxFontSizeMultiplier: true,
    placeholder: true,
    inlineImagePadding: true,
    contextMenuHidden: true,
    textShadowColor: {
      process: require('../../StyleSheet/processColor')
    },
    maxLength: true,
    selectTextOnFocus: true,
    textShadowRadius: true,
    underlineColorAndroid: {
      process: require('../../StyleSheet/processColor')
    },
    textDecorationLine: true,
    blurOnSubmit: true,
    textAlignVertical: true,
    fontStyle: true,
    textShadowOffset: true,
    selectionColor: {
      process: require('../../StyleSheet/processColor')
    },
    selection: true,
    placeholderTextColor: {
      process: require('../../StyleSheet/processColor')
    },
    importantForAutofill: true,
    lineHeight: true,
    textTransform: true,
    returnKeyType: true,
    keyboardType: true,
    multiline: true,
    color: true,
    autoCompleteType: true,
    numberOfLines: true,
    letterSpacing: true,
    returnKeyLabel: true,
    fontSize: true,
    onKeyPress: true,
    cursorColor: {
      process: require('../../StyleSheet/processColor')
    },
    text: true,
    showSoftInputOnFocus: true,
    textAlign: true,
    autoCapitalize: true,
    autoCorrect: true,
    caretHidden: true,
    secureTextEntry: true,
    textBreakStrategy: true,
    onScroll: true,
    onContentSizeChange: true,
    disableFullscreenUI: true,
    includeFontPadding: true,
    fontWeight: true,
    fontFamily: true,
    allowFontScaling: true,
    onSelectionChange: true,
    mostRecentEventCount: true,
    inlineImageLeft: true,
    editable: true,
    fontVariant: true
  })
};
module.exports = AndroidTextInputViewConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuZHJvaWRUZXh0SW5wdXRWaWV3Q29uZmlnLmpzIl0sIm5hbWVzIjpbIkFuZHJvaWRUZXh0SW5wdXRWaWV3Q29uZmlnIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwidG9wVGV4dElucHV0IiwicGhhc2VkUmVnaXN0cmF0aW9uTmFtZXMiLCJidWJibGVkIiwiY2FwdHVyZWQiLCJkaXJlY3RFdmVudFR5cGVzIiwidmFsaWRBdHRyaWJ1dGVzIiwiUmVhY3ROYXRpdmVWaWV3Vmlld0NvbmZpZyIsIm1heEZvbnRTaXplTXVsdGlwbGllciIsInBsYWNlaG9sZGVyIiwiaW5saW5lSW1hZ2VQYWRkaW5nIiwiY29udGV4dE1lbnVIaWRkZW4iLCJ0ZXh0U2hhZG93Q29sb3IiLCJwcm9jZXNzIiwicmVxdWlyZSIsIm1heExlbmd0aCIsInNlbGVjdFRleHRPbkZvY3VzIiwidGV4dFNoYWRvd1JhZGl1cyIsInVuZGVybGluZUNvbG9yQW5kcm9pZCIsInRleHREZWNvcmF0aW9uTGluZSIsImJsdXJPblN1Ym1pdCIsInRleHRBbGlnblZlcnRpY2FsIiwiZm9udFN0eWxlIiwidGV4dFNoYWRvd09mZnNldCIsInNlbGVjdGlvbkNvbG9yIiwic2VsZWN0aW9uIiwicGxhY2Vob2xkZXJUZXh0Q29sb3IiLCJpbXBvcnRhbnRGb3JBdXRvZmlsbCIsImxpbmVIZWlnaHQiLCJ0ZXh0VHJhbnNmb3JtIiwicmV0dXJuS2V5VHlwZSIsImtleWJvYXJkVHlwZSIsIm11bHRpbGluZSIsImNvbG9yIiwiYXV0b0NvbXBsZXRlVHlwZSIsIm51bWJlck9mTGluZXMiLCJsZXR0ZXJTcGFjaW5nIiwicmV0dXJuS2V5TGFiZWwiLCJmb250U2l6ZSIsIm9uS2V5UHJlc3MiLCJjdXJzb3JDb2xvciIsInRleHQiLCJzaG93U29mdElucHV0T25Gb2N1cyIsInRleHRBbGlnbiIsImF1dG9DYXBpdGFsaXplIiwiYXV0b0NvcnJlY3QiLCJjYXJldEhpZGRlbiIsInNlY3VyZVRleHRFbnRyeSIsInRleHRCcmVha1N0cmF0ZWd5Iiwib25TY3JvbGwiLCJvbkNvbnRlbnRTaXplQ2hhbmdlIiwiZGlzYWJsZUZ1bGxzY3JlZW5VSSIsImluY2x1ZGVGb250UGFkZGluZyIsImZvbnRXZWlnaHQiLCJmb250RmFtaWx5IiwiYWxsb3dGb250U2NhbGluZyIsIm9uU2VsZWN0aW9uQ2hhbmdlIiwibW9zdFJlY2VudEV2ZW50Q291bnQiLCJpbmxpbmVJbWFnZUxlZnQiLCJlZGl0YWJsZSIsImZvbnRWYXJpYW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBVUE7Ozs7OztBQUVBOzs7Ozs7QUFHQSxJQUFNQSwwQkFBMEIsR0FBRztBQUNqQ0MsRUFBQUEsZUFBZSxFQUFFLGtCQURnQjtBQUVqQ0MsRUFBQUEsa0JBQWtCLEVBQUU7QUFDbEJDLElBQUFBLFlBQVksRUFBRTtBQUNaQyxNQUFBQSx1QkFBdUIsRUFBRTtBQUN2QkMsUUFBQUEsT0FBTyxFQUFFLGFBRGM7QUFFdkJDLFFBQUFBLFFBQVEsRUFBRTtBQUZhO0FBRGI7QUFESSxHQUZhO0FBVWpDQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQVZlO0FBV2pDQyxFQUFBQSxlQUFlLGtDQUNWQyxtQ0FBMEJELGVBRGhCO0FBR2JFLElBQUFBLHFCQUFxQixFQUFFLElBSFY7QUFJYkMsSUFBQUEsV0FBVyxFQUFFLElBSkE7QUFLYkMsSUFBQUEsa0JBQWtCLEVBQUUsSUFMUDtBQU1iQyxJQUFBQSxpQkFBaUIsRUFBRSxJQU5OO0FBT2JDLElBQUFBLGVBQWUsRUFBRTtBQUFDQyxNQUFBQSxPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtBQUFqQixLQVBKO0FBUWJDLElBQUFBLFNBQVMsRUFBRSxJQVJFO0FBU2JDLElBQUFBLGlCQUFpQixFQUFFLElBVE47QUFVYkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFWTDtBQVdiQyxJQUFBQSxxQkFBcUIsRUFBRTtBQUFDTCxNQUFBQSxPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtBQUFqQixLQVhWO0FBWWJLLElBQUFBLGtCQUFrQixFQUFFLElBWlA7QUFhYkMsSUFBQUEsWUFBWSxFQUFFLElBYkQ7QUFjYkMsSUFBQUEsaUJBQWlCLEVBQUUsSUFkTjtBQWViQyxJQUFBQSxTQUFTLEVBQUUsSUFmRTtBQWdCYkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFoQkw7QUFpQmJDLElBQUFBLGNBQWMsRUFBRTtBQUFDWCxNQUFBQSxPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtBQUFqQixLQWpCSDtBQWtCYlcsSUFBQUEsU0FBUyxFQUFFLElBbEJFO0FBbUJiQyxJQUFBQSxvQkFBb0IsRUFBRTtBQUFDYixNQUFBQSxPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtBQUFqQixLQW5CVDtBQW9CYmEsSUFBQUEsb0JBQW9CLEVBQUUsSUFwQlQ7QUFxQmJDLElBQUFBLFVBQVUsRUFBRSxJQXJCQztBQXNCYkMsSUFBQUEsYUFBYSxFQUFFLElBdEJGO0FBdUJiQyxJQUFBQSxhQUFhLEVBQUUsSUF2QkY7QUF3QmJDLElBQUFBLFlBQVksRUFBRSxJQXhCRDtBQXlCYkMsSUFBQUEsU0FBUyxFQUFFLElBekJFO0FBMEJiQyxJQUFBQSxLQUFLLEVBQUUsSUExQk07QUEyQmJDLElBQUFBLGdCQUFnQixFQUFFLElBM0JMO0FBNEJiQyxJQUFBQSxhQUFhLEVBQUUsSUE1QkY7QUE2QmJDLElBQUFBLGFBQWEsRUFBRSxJQTdCRjtBQThCYkMsSUFBQUEsY0FBYyxFQUFFLElBOUJIO0FBK0JiQyxJQUFBQSxRQUFRLEVBQUUsSUEvQkc7QUFnQ2JDLElBQUFBLFVBQVUsRUFBRSxJQWhDQztBQWlDYkMsSUFBQUEsV0FBVyxFQUFFO0FBQUMzQixNQUFBQSxPQUFPLEVBQUVDLE9BQU8sQ0FBQywrQkFBRDtBQUFqQixLQWpDQTtBQWtDYjJCLElBQUFBLElBQUksRUFBRSxJQWxDTztBQW1DYkMsSUFBQUEsb0JBQW9CLEVBQUUsSUFuQ1Q7QUFvQ2JDLElBQUFBLFNBQVMsRUFBRSxJQXBDRTtBQXFDYkMsSUFBQUEsY0FBYyxFQUFFLElBckNIO0FBc0NiQyxJQUFBQSxXQUFXLEVBQUUsSUF0Q0E7QUF1Q2JDLElBQUFBLFdBQVcsRUFBRSxJQXZDQTtBQXdDYkMsSUFBQUEsZUFBZSxFQUFFLElBeENKO0FBeUNiQyxJQUFBQSxpQkFBaUIsRUFBRSxJQXpDTjtBQTBDYkMsSUFBQUEsUUFBUSxFQUFFLElBMUNHO0FBMkNiQyxJQUFBQSxtQkFBbUIsRUFBRSxJQTNDUjtBQTRDYkMsSUFBQUEsbUJBQW1CLEVBQUUsSUE1Q1I7QUE2Q2JDLElBQUFBLGtCQUFrQixFQUFFLElBN0NQO0FBOENiQyxJQUFBQSxVQUFVLEVBQUUsSUE5Q0M7QUErQ2JDLElBQUFBLFVBQVUsRUFBRSxJQS9DQztBQWdEYkMsSUFBQUEsZ0JBQWdCLEVBQUUsSUFoREw7QUFpRGJDLElBQUFBLGlCQUFpQixFQUFFLElBakROO0FBa0RiQyxJQUFBQSxvQkFBb0IsRUFBRSxJQWxEVDtBQW1EYkMsSUFBQUEsZUFBZSxFQUFFLElBbkRKO0FBb0RiQyxJQUFBQSxRQUFRLEVBQUUsSUFwREc7QUFxRGJDLElBQUFBLFdBQVcsRUFBRTtBQXJEQTtBQVhrQixDQUFuQztBQW9FQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWtCaEUsMEJBQWxCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCBSZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnIGZyb20gJy4uLy4uL0NvbXBvbmVudHMvVmlldy9SZWFjdE5hdGl2ZVZpZXdWaWV3Q29uZmlnJztcbmltcG9ydCB0eXBlIHtSZWFjdE5hdGl2ZUJhc2VDb21wb25lbnRWaWV3Q29uZmlnfSBmcm9tICcuLi8uLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcblxuY29uc3QgQW5kcm9pZFRleHRJbnB1dFZpZXdDb25maWcgPSB7XG4gIHVpVmlld0NsYXNzTmFtZTogJ0FuZHJvaWRUZXh0SW5wdXQnLFxuICBidWJibGluZ0V2ZW50VHlwZXM6IHtcbiAgICB0b3BUZXh0SW5wdXQ6IHtcbiAgICAgIHBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOiB7XG4gICAgICAgIGJ1YmJsZWQ6ICdvblRleHRJbnB1dCcsXG4gICAgICAgIGNhcHR1cmVkOiAnb25UZXh0SW5wdXRDYXB0dXJlJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbiAgZGlyZWN0RXZlbnRUeXBlczoge30sXG4gIHZhbGlkQXR0cmlidXRlczoge1xuICAgIC4uLlJlYWN0TmF0aXZlVmlld1ZpZXdDb25maWcudmFsaWRBdHRyaWJ1dGVzLFxuXG4gICAgbWF4Rm9udFNpemVNdWx0aXBsaWVyOiB0cnVlLFxuICAgIHBsYWNlaG9sZGVyOiB0cnVlLFxuICAgIGlubGluZUltYWdlUGFkZGluZzogdHJ1ZSxcbiAgICBjb250ZXh0TWVudUhpZGRlbjogdHJ1ZSxcbiAgICB0ZXh0U2hhZG93Q29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICBtYXhMZW5ndGg6IHRydWUsXG4gICAgc2VsZWN0VGV4dE9uRm9jdXM6IHRydWUsXG4gICAgdGV4dFNoYWRvd1JhZGl1czogdHJ1ZSxcbiAgICB1bmRlcmxpbmVDb2xvckFuZHJvaWQ6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpfSxcbiAgICB0ZXh0RGVjb3JhdGlvbkxpbmU6IHRydWUsXG4gICAgYmx1ck9uU3VibWl0OiB0cnVlLFxuICAgIHRleHRBbGlnblZlcnRpY2FsOiB0cnVlLFxuICAgIGZvbnRTdHlsZTogdHJ1ZSxcbiAgICB0ZXh0U2hhZG93T2Zmc2V0OiB0cnVlLFxuICAgIHNlbGVjdGlvbkNvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgc2VsZWN0aW9uOiB0cnVlLFxuICAgIHBsYWNlaG9sZGVyVGV4dENvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgaW1wb3J0YW50Rm9yQXV0b2ZpbGw6IHRydWUsXG4gICAgbGluZUhlaWdodDogdHJ1ZSxcbiAgICB0ZXh0VHJhbnNmb3JtOiB0cnVlLFxuICAgIHJldHVybktleVR5cGU6IHRydWUsXG4gICAga2V5Ym9hcmRUeXBlOiB0cnVlLFxuICAgIG11bHRpbGluZTogdHJ1ZSxcbiAgICBjb2xvcjogdHJ1ZSxcbiAgICBhdXRvQ29tcGxldGVUeXBlOiB0cnVlLFxuICAgIG51bWJlck9mTGluZXM6IHRydWUsXG4gICAgbGV0dGVyU3BhY2luZzogdHJ1ZSxcbiAgICByZXR1cm5LZXlMYWJlbDogdHJ1ZSxcbiAgICBmb250U2l6ZTogdHJ1ZSxcbiAgICBvbktleVByZXNzOiB0cnVlLFxuICAgIGN1cnNvckNvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKX0sXG4gICAgdGV4dDogdHJ1ZSxcbiAgICBzaG93U29mdElucHV0T25Gb2N1czogdHJ1ZSxcbiAgICB0ZXh0QWxpZ246IHRydWUsXG4gICAgYXV0b0NhcGl0YWxpemU6IHRydWUsXG4gICAgYXV0b0NvcnJlY3Q6IHRydWUsXG4gICAgY2FyZXRIaWRkZW46IHRydWUsXG4gICAgc2VjdXJlVGV4dEVudHJ5OiB0cnVlLFxuICAgIHRleHRCcmVha1N0cmF0ZWd5OiB0cnVlLFxuICAgIG9uU2Nyb2xsOiB0cnVlLFxuICAgIG9uQ29udGVudFNpemVDaGFuZ2U6IHRydWUsXG4gICAgZGlzYWJsZUZ1bGxzY3JlZW5VSTogdHJ1ZSxcbiAgICBpbmNsdWRlRm9udFBhZGRpbmc6IHRydWUsXG4gICAgZm9udFdlaWdodDogdHJ1ZSxcbiAgICBmb250RmFtaWx5OiB0cnVlLFxuICAgIGFsbG93Rm9udFNjYWxpbmc6IHRydWUsXG4gICAgb25TZWxlY3Rpb25DaGFuZ2U6IHRydWUsXG4gICAgbW9zdFJlY2VudEV2ZW50Q291bnQ6IHRydWUsXG4gICAgaW5saW5lSW1hZ2VMZWZ0OiB0cnVlLFxuICAgIGVkaXRhYmxlOiB0cnVlLFxuICAgIGZvbnRWYXJpYW50OiB0cnVlLFxuICB9LFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSAoQW5kcm9pZFRleHRJbnB1dFZpZXdDb25maWc6IFJlYWN0TmF0aXZlQmFzZUNvbXBvbmVudFZpZXdDb25maWc8Pik7XG4iXX0=