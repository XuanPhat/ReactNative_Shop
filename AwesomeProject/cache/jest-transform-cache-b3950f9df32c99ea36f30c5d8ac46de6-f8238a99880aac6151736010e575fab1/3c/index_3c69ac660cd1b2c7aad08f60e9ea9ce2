40d33c5314056d3f4c21339860639fd5
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateNotification = exports.updateProfileAction = exports.deleteNotificationAction = exports.deleteAddressAction = exports.clearBadgeNotification = exports.NumberNotification = exports.UpdateAddressAction = exports.EditAddressAction = exports.addAddressAction = exports.registerAction = exports.signOutAction = exports.signInAction = void 0;

var ActionTypes = _interopRequireWildcard(require("./types"));

var signInAction = function signInAction(email, password) {
  return {
    type: ActionTypes.AUTH_SIGNIN,
    email: email,
    password: password
  };
};

exports.signInAction = signInAction;

var signOutAction = function signOutAction() {
  return {
    type: ActionTypes.AUTH_SIGNOUT
  };
};

exports.signOutAction = signOutAction;

var registerAction = function registerAction(email, password, name, role) {
  return {
    type: ActionTypes.AUTH_REGISTER,
    email: email,
    password: password,
    name: name,
    role: role
  };
};

exports.registerAction = registerAction;

var addAddressAction = function addAddressAction(name, phone, address, uid) {
  return {
    type: ActionTypes.AUTH_ADD_ADDRESS,
    uid: uid,
    name: name,
    phone: phone,
    address: address
  };
};

exports.addAddressAction = addAddressAction;

var EditAddressAction = function EditAddressAction(name, phone, address) {
  return {
    type: ActionTypes.AUTH_EDIT_ADDRESS,
    name: name,
    phone: phone,
    address: address
  };
};

exports.EditAddressAction = EditAddressAction;

var UpdateAddressAction = function UpdateAddressAction(name, phone, address, id) {
  return {
    type: ActionTypes.AUTH_UPDATE_ADDRESS,
    name: name,
    phone: phone,
    address: address,
    id: id
  };
};

exports.UpdateAddressAction = UpdateAddressAction;

var NumberNotification = function NumberNotification(numberBadges, contentNotification) {
  return {
    type: ActionTypes.AUTH_NUMBER_NOTIFICATION,
    numberBadges: numberBadges,
    contentNotification: contentNotification
  };
};

exports.NumberNotification = NumberNotification;

var clearBadgeNotification = function clearBadgeNotification(ClearBadgeNumber) {
  return {
    type: ActionTypes.AUTH_CLEAR_NOTIFICATION,
    ClearBadgeNumber: ClearBadgeNumber
  };
};

exports.clearBadgeNotification = clearBadgeNotification;

var deleteAddressAction = function deleteAddressAction(address) {
  return {
    type: ActionTypes.AUTH_DELETE_ADDRESS,
    address: address
  };
};

exports.deleteAddressAction = deleteAddressAction;

var deleteNotificationAction = function deleteNotificationAction(notification) {
  return {
    type: ActionTypes.AUTH_DELETE_NOTIFICATIONS,
    notification: notification
  };
};

exports.deleteNotificationAction = deleteNotificationAction;

var updateProfileAction = function updateProfileAction(name, image, phone) {
  return {
    type: ActionTypes.AUTH_UPDATE_PROFILE,
    name: name,
    image: image,
    phone: phone
  };
};

exports.updateProfileAction = updateProfileAction;

var updateNotification = function updateNotification(numberBadges) {
  return {
    type: ActionTypes.AUTH_UPDATE_NUMBER_BADGES,
    numberBadges: numberBadges
  };
};

exports.updateNotification = updateNotification;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInNpZ25JbkFjdGlvbiIsImVtYWlsIiwicGFzc3dvcmQiLCJ0eXBlIiwiQWN0aW9uVHlwZXMiLCJBVVRIX1NJR05JTiIsInNpZ25PdXRBY3Rpb24iLCJBVVRIX1NJR05PVVQiLCJyZWdpc3RlckFjdGlvbiIsIm5hbWUiLCJyb2xlIiwiQVVUSF9SRUdJU1RFUiIsImFkZEFkZHJlc3NBY3Rpb24iLCJwaG9uZSIsImFkZHJlc3MiLCJ1aWQiLCJBVVRIX0FERF9BRERSRVNTIiwiRWRpdEFkZHJlc3NBY3Rpb24iLCJBVVRIX0VESVRfQUREUkVTUyIsIlVwZGF0ZUFkZHJlc3NBY3Rpb24iLCJpZCIsIkFVVEhfVVBEQVRFX0FERFJFU1MiLCJOdW1iZXJOb3RpZmljYXRpb24iLCJudW1iZXJCYWRnZXMiLCJjb250ZW50Tm90aWZpY2F0aW9uIiwiQVVUSF9OVU1CRVJfTk9USUZJQ0FUSU9OIiwiY2xlYXJCYWRnZU5vdGlmaWNhdGlvbiIsIkNsZWFyQmFkZ2VOdW1iZXIiLCJBVVRIX0NMRUFSX05PVElGSUNBVElPTiIsImRlbGV0ZUFkZHJlc3NBY3Rpb24iLCJBVVRIX0RFTEVURV9BRERSRVNTIiwiZGVsZXRlTm90aWZpY2F0aW9uQWN0aW9uIiwibm90aWZpY2F0aW9uIiwiQVVUSF9ERUxFVEVfTk9USUZJQ0FUSU9OUyIsInVwZGF0ZVByb2ZpbGVBY3Rpb24iLCJpbWFnZSIsIkFVVEhfVVBEQVRFX1BST0ZJTEUiLCJ1cGRhdGVOb3RpZmljYXRpb24iLCJBVVRIX1VQREFURV9OVU1CRVJfQkFER0VTIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRU8sSUFBTUEsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSO0FBQUEsU0FBc0I7QUFDaERDLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDQyxXQUQ4QjtBQUVoREosSUFBQUEsS0FBSyxFQUFMQSxLQUZnRDtBQUdoREMsSUFBQUEsUUFBUSxFQUFSQTtB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QUFFekRELElBQUFBLFlBQVksRUFBWkE7QUFGeUQsR0FBbkI7QUFBQSxDQUFqQzs7OztBQUlBLElBQU1FLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0IsQ0FBQ3pCLElBQUQsRUFBTzBCLEtBQVAsRUFBY3RCLEtBQWQ7QUFBQSxTQUF5QjtBQUMxRFYsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNnQyxtQkFEd0M7QUFFMUQzQixJQUFBQSxJQUFJLEVBQUpBLElBRjBEO0FBRzFEMEIsSUFBQUEsS0FBSyxFQUFMQSxLQUgwRDtBQUkxRHRCLElBQUFBLEtBQUssRUFBTEE7QUFKMEQsR0FBekI7QUFBQSxDQUE1Qjs7OztBQU1BLElBQU13QixrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQXFCLENBQUNkLFlBQUQ7QUFBQSxTQUFtQjtBQUNuRHBCLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDa0MseUJBRGlDO0FBRW5EZixJQUFBQSxZQUFZLEVBQVpBO0FBRm1ELEdBQW5CO0FBQUEsQ0FBM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBBY3Rpb25UeXBlcyBmcm9tICcuL3R5cGVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBzaWduSW5BY3Rpb24gPSAoZW1haWwsIHBhc3N3b3JkKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfU0lHTklOLFxyXG4gIGVtYWlsLFxyXG4gIHBhc3N3b3JkLFxyXG59KTtcclxuZXhwb3J0IGNvbnN0IHNpZ25PdXRBY3Rpb24gPSAoKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfU0lHTk9VVCxcclxufSk7XHJcbmV4cG9ydCBjb25zdCByZWdpc3RlckFjdGlvbiA9IChlbWFpbCwgcGFzc3dvcmQsIG5hbWUsIHJvbGUpID0+ICh7XHJcbiAgdHlwZTogQWN0aW9uVHlwZXMuQVVUSF9SRUdJU1RFUixcclxuICBlbWFpbCxcclxuICBwYXNzd29yZCxcclxuICBuYW1lLFxyXG4gIHJvbGUsXHJcbn0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGFkZEFkZHJlc3NBY3Rpb24gPSAobmFtZSwgcGhvbmUsIGFkZHJlc3MsIHVpZCkgPT4gKHtcclxuICB0eXBlOiBBY3Rpb25UeXBlcy5BVVRIX0FERF9BRERSRVNTLFxyXG4gIHVpZDogdWlkLFxyXG4gIG5hbWUsXHJcbiAgcGhvbmUsXHJcbiAgYWRkcmVzcyxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgRWRpdEFkZHJlc3NBY3Rpb24gPSAobmFtZSwgcGhvbmUsIGFkZHJlc3MpID0+ICh7XHJcbiAgdHlwZTogQWN0aW9uVHlwZXMuQVVUSF9FRElUX0FERFJFU1MsXHJcbiAgbmFtZSxcclxuICBwaG9uZSxcclxuICBhZGRyZXNzLFxyXG59KTtcclxuXHJcbmV4cG9ydCBjb25zdCBVcGRhdGVBZGRyZXNzQWN0aW9uID0gKG5hbWUsIHBob25lLCBhZGRyZXNzLCBpZCkgPT4gKHtcclxuICB0eXBlOiBBY3Rpb25UeXBlcy5BVVRIX1VQREFURV9BRERSRVNTLFxyXG4gIG5hbWUsXHJcbiAgcGhvbmUsXHJcbiAgYWRkcmVzcyxcclxuICBpZCxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgTnVtYmVyTm90aWZpY2F0aW9uID0gKG51bWJlckJhZGdlcywgY29udGVudE5vdGlmaWNhdGlvbikgPT4gKHtcclxuICB0eXBlOiBBY3Rpb25UeXBlcy5BVVRIX05VTUJFUl9OT1RJRklDQVRJT04sXHJcbiAgbnVtYmVyQmFkZ2VzLFxyXG4gIGNvbnRlbnROb3RpZmljYXRpb24sXHJcbn0pO1xyXG5leHBvcnQgY29uc3QgY2xlYXJCYWRnZU5vdGlmaWNhdGlvbiA9IChDbGVhckJhZGdlTnVtYmVyKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfQ0xFQVJfTk9USUZJQ0FUSU9OLFxyXG4gIENsZWFyQmFkZ2VOdW1iZXIsXHJcbn0pO1xyXG5leHBvcnQgY29uc3QgZGVsZXRlQWRkcmVzc0FjdGlvbiA9IChhZGRyZXNzKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfREVMRVRFX0FERFJFU1MsXHJcbiAgYWRkcmVzcyxcclxufSk7XHJcbmV4cG9ydCBjb25zdCBkZWxldGVOb3RpZmljYXRpb25BY3Rpb24gPSAobm90aWZpY2F0aW9uKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfREVMRVRFX05PVElGSUNBVElPTlMsXHJcbiAgbm90aWZpY2F0aW9uLFxyXG59KTtcclxuZXhwb3J0IGNvbnN0IHVwZGF0ZVByb2ZpbGVBY3Rpb24gPSAobmFtZSwgaW1hZ2UsIHBob25lKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfVVBEQVRFX1BST0ZJTEUsXHJcbiAgbmFtZSxcclxuICBpbWFnZSxcclxuICBwaG9uZSxcclxufSk7XHJcbmV4cG9ydCBjb25zdCB1cGRhdGVOb3RpZmljYXRpb24gPSAobnVtYmVyQmFkZ2VzKSA9PiAoe1xyXG4gIHR5cGU6IEFjdGlvblR5cGVzLkFVVEhfVVBEQVRFX05VTUJFUl9CQURHRVMsXHJcbiAgbnVtYmVyQmFkZ2VzLFxyXG59KTtcclxuIl19