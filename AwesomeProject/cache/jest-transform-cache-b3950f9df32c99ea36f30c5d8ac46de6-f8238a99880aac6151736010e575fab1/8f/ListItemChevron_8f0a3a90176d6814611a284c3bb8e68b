1c43a9f12867831275d139c5a952a15d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _config = require("../config");

var _Icon = _interopRequireDefault(require("../icons/Icon"));

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

function ListItemChevron(_a) {
  var containerStyle = _a.containerStyle,
      props = __rest(_a, ["containerStyle"]);

  return _react.default.createElement(_Icon.default, (0, _extends2.default)({
    type: _reactNative.Platform.OS === 'ios' ? 'ionicon' : 'material',
    color: "#D1D1D6",
    name: _reactNative.Platform.OS === 'ios' ? 'chevron-forward-outline' : 'keyboard-arrow-right',
    size: 16,
    containerStyle: _reactNative.StyleSheet.flatten([{
      alignSelf: 'center'
    }, containerStyle])
  }, props));
}

var _default = (0, _config.withTheme)(ListItemChevron, 'ListItemChevron');

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpc3RJdGVtQ2hldnJvbi5qcyJdLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIkxpc3RJdGVtQ2hldnJvbiIsIl9hIiwiY29udGFpbmVyU3R5bGUiLCJwcm9wcyIsIlBsYXRmb3JtIiwiT1MiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImFsaWduU2VsZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBZEEsSUFBSUEsTUFBTSxHQUFJLFFBQVEsS0FBS0EsTUFBZCxJQUF5QixVQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7QUFDbEQsTUFBSUMsQ0FBQyxHQUFHLEVBQVI7O0FBQ0EsT0FBSyxJQUFJQyxDQUFULElBQWNILENBQWQ7QUFBaUIsUUFBSUksTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxjQUFqQixDQUFnQ0MsSUFBaEMsQ0FBcUNQLENBQXJDLEVBQXdDRyxDQUF4QyxLQUE4Q0YsQ0FBQyxDQUFDTyxPQUFGLENBQVVMLENBQVYsSUFBZSxDQUFqRSxFQUNiRCxDQUFDLENBQUNDLENBQUQsQ0FBRCxHQUFPSCxDQUFDLENBQUNHLENBQUQsQ0FBUjtBQURKOztBQUVBLE1BQUlILENBQUMsSUFBSSxJQUFMLElBQWEsT0FBT0ksTUFBTSxDQUFDSyxxQkFBZCxLQUF3QyxVQUF6RCxFQUNJLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQVIsRUFBV1AsQ0FBQyxHQUFHQyxNQUFNLENBQUNLLHFCQUFQLENBQTZCVCxDQUE3QixDQUFwQixFQUFxRFUsQ0FBQyxHQUFHUCxDQUFDLENBQUNRLE1BQTNELEVBQW1FRCxDQUFDLEVBQXBFLEVBQXdFO0FBQ3BFLFFBQUlULENBQUMsQ0FBQ08sT0FBRixDQUFVTCxDQUFDLENBQUNPLENBQUQsQ0FBWCxJQUFrQixDQUFsQixJQUF1Qk4sTUFBTSxDQUFDQyxTQUFQLENBQWlCTyxvQkFBakIsQ0FBc0NMLElBQXRDLENBQTJDUCxDQUEzQyxFQUE4Q0csQ0FBQyxDQUFDTyxDQUFELENBQS9DLENBQTNCLEVBQ0lSLENBQUMsQ0FBQ0MsQ0FBQyxDQUFDTyxDQUFELENBQUYsQ0FBRCxHQUFVVixDQUFDLENBQUNHLENBQUMsQ0FBQ08sQ0FBRCxDQUFGLENBQVg7QUFDUDtBQUNMLFNBQU9SLENBQVA7QUFDSCxDQVZEOztBQWVBLFNBQVNXLGVBQVQsQ0FBeUJDLEVBQXpCLEVBQTZCO0FBQ3JCLE1BQUVDLGNBQUYsR0FBcUJELEVBQXJCLENBQUVDLGNBQUY7QUFBQSxNQUF5QkMsS0FBekIsR0FBaUNqQixNQUFNLENBQUNlLEVBQUQsRUFBSyxDQUFDLGdCQUFELENBQUwsQ0FBdkM7O0FBQ0osU0FBUSw2QkFBQyxhQUFEO0FBQU0sSUFBQSxJQUFJLEVBQUVHLHNCQUFTQyxFQUFULEtBQWdCLEtBQWhCLEdBQXdCLFNBQXhCLEdBQW9DLFVBQWhEO0FBQTRELElBQUEsS0FBSyxFQUFDLFNBQWxFO0FBQTRFLElBQUEsSUFBSSxFQUFFRCxzQkFBU0MsRUFBVCxLQUFnQixLQUFoQixHQUNwRix5QkFEb0YsR0FFcEYsc0JBRkU7QUFFc0IsSUFBQSxJQUFJLEVBQUUsRUFGNUI7QUFFZ0MsSUFBQSxjQUFjLEVBQUVDLHdCQUFXQyxPQUFYLENBQW1CLENBQ3ZFO0FBQUVDLE1BQUFBLFNBQVMsRUFBRTtBQUFiLEtBRHVFLEVBRXZFTixjQUZ1RSxDQUFuQjtBQUZoRCxLQUtBQyxLQUxBLEVBQVI7QUFNSDs7ZUFDYyx1QkFBVUgsZUFBVixFQUEyQixpQkFBM0IsQyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBQbGF0Zm9ybSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vaWNvbnMvSWNvbic7XG5mdW5jdGlvbiBMaXN0SXRlbUNoZXZyb24oX2EpIHtcbiAgICB2YXIgeyBjb250YWluZXJTdHlsZSB9ID0gX2EsIHByb3BzID0gX19yZXN0KF9hLCBbXCJjb250YWluZXJTdHlsZVwiXSk7XG4gICAgcmV0dXJuICg8SWNvbiB0eXBlPXtQbGF0Zm9ybS5PUyA9PT0gJ2lvcycgPyAnaW9uaWNvbicgOiAnbWF0ZXJpYWwnfSBjb2xvcj1cIiNEMUQxRDZcIiBuYW1lPXtQbGF0Zm9ybS5PUyA9PT0gJ2lvcydcbiAgICAgICAgPyAnY2hldnJvbi1mb3J3YXJkLW91dGxpbmUnXG4gICAgICAgIDogJ2tleWJvYXJkLWFycm93LXJpZ2h0J30gc2l6ZT17MTZ9IGNvbnRhaW5lclN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW1xuICAgICAgICB7IGFsaWduU2VsZjogJ2NlbnRlcicgfSxcbiAgICAgICAgY29udGFpbmVyU3R5bGUsXG4gICAgXSl9IHsuLi5wcm9wc30vPik7XG59XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoTGlzdEl0ZW1DaGV2cm9uLCAnTGlzdEl0ZW1DaGV2cm9uJyk7XG4iXX0=