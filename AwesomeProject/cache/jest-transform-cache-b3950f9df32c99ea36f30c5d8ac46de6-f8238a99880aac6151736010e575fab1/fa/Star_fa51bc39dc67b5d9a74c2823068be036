c952fb04d0514c556cfce1d5f14c995e
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var STAR_IMAGE = require('../images/airbnb-star.png');

var STAR_SELECTED_IMAGE = require('../images/airbnb-star-selected.png');

var STAR_SIZE = 40;

var Star = function (_PureComponent) {
  (0, _inherits2.default)(Star, _PureComponent);

  var _super = _createSuper(Star);

  function Star() {
    var _this;

    (0, _classCallCheck2.default)(this, Star);
    _this = _super.call(this);
    _this.springValue = new _reactNative.Animated.Value(1);
    _this.state = {
      selected: false
    };
    return _this;
  }

  (0, _createClass2.default)(Star, [{
    key: "spring",
    value: function spring() {
      var _this$props = this.props,
          position = _this$props.position,
          starSelectedInPosition = _this$props.starSelectedInPosition;
      this.springValue.setValue(1.2);

      _reactNative.Animated.spring(this.springValue, {
        toValue: 1,
        friction: 2,
        tension: 1,
        useNativeDriver: true
      }).start();

      this.setState({
        selected: !this.state.selected
      });
      starSelectedInPosition(position);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          fill = _this$props2.fill,
          size = _this$props2.size,
          selectedColor = _this$props2.selectedColor,
          unSelectedColor = _this$props2.unSelectedColor,
          isDisabled = _this$props2.isDisabled,
          starStyle = _this$props2.starStyle;
      var starSource = fill && selectedColor === null ? STAR_SELECTED_IMAGE : STAR_IMAGE;
      return _react.default.createElement(_reactNative.TouchableOpacity, {
        activeOpacity: 1,
        onPress: this.spring.bind(this),
        disabled: isDisabled
      }, _react.default.createElement(_reactNative.Animated.Image, {
        source: starSource,
        style: [styles.starStyle, {
          tintColor: fill && selectedColor ? selectedColor : unSelectedColor,
          width: size || STAR_SIZE,
          height: size || STAR_SIZE,
          transform: [{
            scale: this.springValue
          }]
        }, starStyle]
      }));
    }
  }]);
  return Star;
}(_react.PureComponent);

exports.default = Star;
Star.defaultProps = {
  selectedColor: '#f1c40f',
  unSelectedColor: "#BDC3C7"
};

var styles = _reactNative.StyleSheet.create({
  starStyle: {
    margin: 3
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0YXIuanMiXSwibmFtZXMiOlsiU1RBUl9JTUFHRSIsInJlcXVpcmUiLCJTVEFSX1NFTEVDVEVEX0lNQUdFIiwiU1RBUl9TSVpFIiwiU3RhciIsInNwcmluZ1ZhbHVlIiwiQW5pbWF0ZWQiLCJWYWx1ZSIsInN0YXRlIiwic2VsZWN0ZWQiLCJwcm9wcyIsInBvc2l0aW9uIiwic3RhclNlbGVjdGVkSW5Qb3NpdGlvbiIsInNldFZhbHVlIiwic3ByaW5nIiwidG9WYWx1ZSIsImZyaWN0aW9uIiwidGVuc2lvbiIsInVzZU5hdGl2ZURyaXZlciIsInN0YXJ0Iiwic2V0U3RhdGUiLCJmaWxsIiwic2l6ZSIsInNlbGVjdGVkQ29sb3IiLCJ1blNlbGVjdGVkQ29sb3IiLCJpc0Rpc2FibGVkIiwic3RhclN0eWxlIiwic3RhclNvdXJjZSIsImJpbmQiLCJzdHlsZXMiLCJ0aW50Q29sb3IiLCJ3aWR0aCIsImhlaWdodCIsInRyYW5zZm9ybSIsInNjYWxlIiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJtYXJnaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUUsMkJBQUYsQ0FBMUI7O0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUdELE9BQU8sQ0FBRSxvQ0FBRixDQUFuQzs7QUFDQSxJQUFNRSxTQUFTLEdBQUcsRUFBbEI7O0lBRXFCQyxJOzs7OztBQU1uQixrQkFBYztBQUFBOztBQUFBO0FBQ1o7QUFDQSxVQUFLQyxXQUFMLEdBQW1CLElBQUlDLHNCQUFTQyxLQUFiLENBQW9CLENBQXBCLENBQW5CO0FBRUEsVUFBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLFFBQVEsRUFBRTtBQURDLEtBQWI7QUFKWTtBQU9iOzs7OzZCQUVRO0FBQUEsd0JBQ3NDLEtBQUtDLEtBRDNDO0FBQUEsVUFDQ0MsUUFERCxlQUNDQSxRQUREO0FBQUEsVUFDV0Msc0JBRFgsZUFDV0Esc0JBRFg7QUFHUCxXQUFLUCxXQUFMLENBQWlCUSxRQUFqQixDQUEyQixHQUEzQjs7QUFFQVAsNEJBQVNRLE1BQVQsQ0FDRSxLQUFLVCxXQURQLEVBRUU7QUFDRVUsUUFBQUEsT0FBTyxFQUFFLENBRFg7QUFFRUMsUUFBQUEsUUFBUSxFQUFFLENBRlo7QUFHRUMsUUFBQUEsT0FBTyxFQUFFLENBSFg7QUFJRUMsUUFBQUEsZUFBZSxFQUFFO0FBSm5CLE9BRkYsRUFRRUMsS0FSRjs7QUFVQSxXQUFLQyxRQUFMLENBQWU7QUFBRVgsUUFBQUEsUUFBUSxFQUFFLENBQUMsS0FBS0QsS0FBTCxDQUFXQztBQUF4QixPQUFmO0FBQ0FHLE1BQUFBLHNCQUFzQixDQUFFRCxRQUFGLENBQXRCO0FBQ0Q7Ozs2QkFFUTtBQUFBLHlCQUN1RSxLQUFLRCxLQUQ1RTtBQUFBLFVBQ0NXLElBREQsZ0JBQ0NBLElBREQ7QUFBQSxVQUNPQyxJQURQLGdCQUNPQSxJQURQO0FBQUEsVUFDYUMsYUFEYixnQkFDYUEsYUFEYjtBQUFBLFVBQzRCQyxlQUQ1QixnQkFDNEJBLGVBRDVCO0FBQUEsVUFDNkNDLFVBRDdDLGdCQUM2Q0EsVUFEN0M7QUFBQSxVQUN5REMsU0FEekQsZ0JBQ3lEQSxTQUR6RDtBQUVQLFVBQU1DLFVBQVUsR0FBR04sSUFBSSxJQUFJRSxhQUFhLEtBQUssSUFBMUIsR0FBaUNyQixtQkFBakMsR0FBdURGLFVBQTFFO0FBRUEsYUFDRSw2QkFBQyw2QkFBRDtBQUFrQixRQUFBLGFBQWEsRUFBRSxDQUFqQztBQUFvQyxRQUFBLE9BQU8sRUFBRSxLQUFLYyxNQUFMLENBQVljLElBQVosQ0FBa0IsSUFBbEIsQ0FBN0M7QUFBdUUsUUFBQSxRQUFRLEVBQUVIO0FBQWpGLFNBQ0UsNkJBQUMscUJBQUQsQ0FBVSxLQUFWO0FBQ0UsUUFBQSxNQUFNLEVBQUVFLFVBRFY7QUFFRSxRQUFBLEtBQUssRUFBRSxDQUNMRSxNQUFNLENBQUNILFNBREYsRUFFTDtBQUNFSSxVQUFBQSxTQUFTLEVBQUVULElBQUksSUFBSUUsYUFBUixHQUF3QkEsYUFBeEIsR0FBd0NDLGVBRHJEO0FBRUVPLFVBQUFBLEtBQUssRUFBRVQsSUFBSSxJQUFJbkIsU0FGakI7QUFHRTZCLFVBQUFBLE1BQU0sRUFBRVYsSUFBSSxJQUFJbkIsU0FIbEI7QUFJRThCLFVBQUFBLFNBQVMsRUFBRSxDQUFDO0FBQUVDLFlBQUFBLEtBQUssRUFBRSxLQUFLN0I7QUFBZCxXQUFEO0FBSmIsU0FGSyxFQVFMcUIsU0FSSztBQUZULFFBREYsQ0FERjtBQWlCRDs7O0VBdkQrQlMsb0I7OztBQUFiL0IsSSxDQUNaZ0MsWSxHQUFlO0FBQ3BCYixFQUFBQSxhQUFhLEVBQUUsU0FESztBQUVwQkMsRUFBQUEsZUFBZSxFQUFFO0FBRkcsQzs7QUF5RHhCLElBQU1LLE1BQU0sR0FBR1Esd0JBQVdDLE1BQVgsQ0FBbUI7QUFDaENaLEVBQUFBLFNBQVMsRUFBRTtBQUNUYSxJQUFBQSxNQUFNLEVBQUU7QUFEQztBQURxQixDQUFuQixDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7UHVyZUNvbXBvbmVudH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtTdHlsZVNoZWV0LCBBbmltYXRlZCwgVG91Y2hhYmxlT3BhY2l0eX0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuY29uc3QgU1RBUl9JTUFHRSA9IHJlcXVpcmUoICcuLi9pbWFnZXMvYWlyYm5iLXN0YXIucG5nJyApO1xuY29uc3QgU1RBUl9TRUxFQ1RFRF9JTUFHRSA9IHJlcXVpcmUoICcuLi9pbWFnZXMvYWlyYm5iLXN0YXItc2VsZWN0ZWQucG5nJyApO1xuY29uc3QgU1RBUl9TSVpFID0gNDA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0YXIgZXh0ZW5kcyBQdXJlQ29tcG9uZW50IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBzZWxlY3RlZENvbG9yOiAnI2YxYzQwZicsXG4gICAgdW5TZWxlY3RlZENvbG9yOiBcIiNCREMzQzdcIixcbiAgfTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuc3ByaW5nVmFsdWUgPSBuZXcgQW5pbWF0ZWQuVmFsdWUoIDEgKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICB9O1xuICB9XG5cbiAgc3ByaW5nKCkge1xuICAgIGNvbnN0IHsgcG9zaXRpb24sIHN0YXJTZWxlY3RlZEluUG9zaXRpb24gfSA9IHRoaXMucHJvcHM7XG5cbiAgICB0aGlzLnNwcmluZ1ZhbHVlLnNldFZhbHVlKCAxLjIgKTtcblxuICAgIEFuaW1hdGVkLnNwcmluZyhcbiAgICAgIHRoaXMuc3ByaW5nVmFsdWUsXG4gICAgICB7XG4gICAgICAgIHRvVmFsdWU6IDEsXG4gICAgICAgIGZyaWN0aW9uOiAyLFxuICAgICAgICB0ZW5zaW9uOiAxLFxuICAgICAgICB1c2VOYXRpdmVEcml2ZXI6IHRydWUsXG4gICAgICB9XG4gICAgKS5zdGFydCgpO1xuXG4gICAgdGhpcy5zZXRTdGF0ZSggeyBzZWxlY3RlZDogIXRoaXMuc3RhdGUuc2VsZWN0ZWQgfSApO1xuICAgIHN0YXJTZWxlY3RlZEluUG9zaXRpb24oIHBvc2l0aW9uICk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBmaWxsLCBzaXplLCBzZWxlY3RlZENvbG9yLCB1blNlbGVjdGVkQ29sb3IsIGlzRGlzYWJsZWQsIHN0YXJTdHlsZSB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdGFyU291cmNlID0gZmlsbCAmJiBzZWxlY3RlZENvbG9yID09PSBudWxsID8gU1RBUl9TRUxFQ1RFRF9JTUFHRSA6IFNUQVJfSU1BR0U7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRvdWNoYWJsZU9wYWNpdHkgYWN0aXZlT3BhY2l0eT17MX0gb25QcmVzcz17dGhpcy5zcHJpbmcuYmluZCggdGhpcyApfSBkaXNhYmxlZD17aXNEaXNhYmxlZH0+XG4gICAgICAgIDxBbmltYXRlZC5JbWFnZVxuICAgICAgICAgIHNvdXJjZT17c3RhclNvdXJjZX1cbiAgICAgICAgICBzdHlsZT17W1xuICAgICAgICAgICAgc3R5bGVzLnN0YXJTdHlsZSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdGludENvbG9yOiBmaWxsICYmIHNlbGVjdGVkQ29sb3IgPyBzZWxlY3RlZENvbG9yIDogdW5TZWxlY3RlZENvbG9yLFxuICAgICAgICAgICAgICB3aWR0aDogc2l6ZSB8fCBTVEFSX1NJWkUsXG4gICAgICAgICAgICAgIGhlaWdodDogc2l6ZSB8fCBTVEFSX1NJWkUsXG4gICAgICAgICAgICAgIHRyYW5zZm9ybTogW3sgc2NhbGU6IHRoaXMuc3ByaW5nVmFsdWUgfV1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGFyU3R5bGVcbiAgICAgICAgICBdfVxuICAgICAgICAvPlxuICAgICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoIHtcbiAgc3RhclN0eWxlOiB7XG4gICAgbWFyZ2luOiAzXG4gIH1cbn0gKTtcbiJdfQ==