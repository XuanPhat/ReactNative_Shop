cffc6100460c3fbf57c817dc3af1e859
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var PortalManager = function (_React$PureComponent) {
  (0, _inherits2.default)(PortalManager, _React$PureComponent);

  var _super = _createSuper(PortalManager);

  function PortalManager() {
    var _this;

    (0, _classCallCheck2.default)(this, PortalManager);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty((0, _assertThisInitialized2.default)(_this), "state", {
      portals: []
    });

    _defineProperty((0, _assertThisInitialized2.default)(_this), "mount", function (key, children) {
      _this.setState(function (state) {
        return {
          portals: [].concat((0, _toConsumableArray2.default)(state.portals), [{
            key: key,
            children: children
          }])
        };
      });
    });

    _defineProperty((0, _assertThisInitialized2.default)(_this), "update", function (key, children) {
      return _this.setState(function (state) {
        return {
          portals: state.portals.map(function (item) {
            if (item.key === key) {
              return _objectSpread(_objectSpread({}, item), {}, {
                children: children
              });
            }

            return item;
          })
        };
      });
    });

    _defineProperty((0, _assertThisInitialized2.default)(_this), "unmount", function (key) {
      return _this.setState(function (state) {
        return {
          portals: state.portals.filter(function (item) {
            return item.key !== key;
          })
        };
      });
    });

    return _this;
  }

  (0, _createClass2.default)(PortalManager, [{
    key: "render",
    value: function render() {
      return this.state.portals.map(function (_ref) {
        var key = _ref.key,
            children = _ref.children;
        return React.createElement(_reactNative.View, {
          key: key,
          collapsable: false,
          pointerEvents: "box-none",
          style: _reactNative.StyleSheet.absoluteFill
        }, children);
      });
    }
  }]);
  return PortalManager;
}(React.PureComponent);

exports.default = PortalManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBvcnRhbE1hbmFnZXIudHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwicG9ydGFscyIsInN0YXRlIiwia2V5IiwiY2hpbGRyZW4iLCJpdGVtIiwiU3R5bGVTaGVldCIsImFic29sdXRlRmlsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxLQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQVllLGE7Ozs7O0FBQTJELDJCQUFBO0FBQUE7O0FBQUE7O0FBQUEsc0NBQUEsSUFBQTtBQUFBLE1BQUEsSUFBQTtBQUFBOztBQUFBLG9EQUFBLElBQUE7O0FBQUEsSUFBQSxlQUFBLDhDQUFBLE9BQUEsRUFDekQ7QUFDYkMsTUFBQUEsT0FBTyxFQUFFO0FBREksS0FEeUQsQ0FBQTs7QUFBQSxJQUFBLGVBQUEsOENBQUEsT0FBQSxFQUtoRSxVQUFBLEdBQUEsRUFBQSxRQUFBLEVBQTRDO0FBQ2xELFlBQUEsUUFBQSxDQUFlQyxVQUFBQSxLQUFEO0FBQUEsZUFBWTtBQUN4QkQsVUFBQUEsT0FBTyw2Q0FBTUMsS0FBSyxDQUFULE9BQUYsSUFBcUI7QUFBRUMsWUFBQUEsR0FBRixFQUFFQSxHQUFGO0FBQU9DLFlBQUFBLFFBQUFBLEVBQUFBO0FBQVAsV0FBckI7QUFEaUIsU0FBWjtBQUFBLE9BQWQ7QUFOc0UsS0FBQSxDQUFBOztBQUFBLElBQUEsZUFBQSw4Q0FBQSxRQUFBLEVBVy9ELFVBQUEsR0FBQSxFQUFBLFFBQUE7QUFBQSxhQUNQLE1BQUEsUUFBQSxDQUFlRixVQUFBQSxLQUFEO0FBQUEsZUFBWTtBQUN4QkQsVUFBQUEsT0FBTyxFQUFFLEtBQUssQ0FBTCxPQUFBLENBQUEsR0FBQSxDQUFtQkksVUFBQUEsSUFBRCxFQUFVO0FBQ25DLGdCQUFJQSxJQUFJLENBQUpBLEdBQUFBLEtBQUosR0FBQSxFQUFzQjtBQUNwQixxQkFBQSxhQUFBLENBQUEsYUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBLENBQUEsRUFBQSxFQUFBLEVBQUE7QUFBa0JELGdCQUFBQSxRQUFBQSxFQUFBQTtBQUFsQixlQUFBLENBQUE7QUFDRDs7QUFDRCxtQkFBQSxJQUFBO0FBSk8sV0FBQTtBQURlLFNBQVo7QUFBQSxPQUFkLENBRE87QUFBQSxLQVgrRCxDQUFBOztBQUFBLElBQUEsZUFBQSw4Q0FBQSxTQUFBLEVBcUI3REQsVUFBQUEsR0FBRDtBQUFBLGFBQ1IsTUFBQSxRQUFBLENBQWVELFVBQUFBLEtBQUQ7QUFBQSxlQUFZO0FBQ3hCRCxVQUFBQSxPQUFPLEVBQUVDLEtBQUssQ0FBTEEsT0FBQUEsQ0FBQUEsTUFBQUEsQ0FBc0JHLFVBQUFBLElBQUQ7QUFBQSxtQkFBVUEsSUFBSSxDQUFKQSxHQUFBQSxLQUEvQkgsR0FBcUI7QUFBQSxXQUFyQkE7QUFEZSxTQUFaO0FBQUEsT0FBZCxDQURRO0FBQUEsS0FyQjhELENBQUE7O0FBQUE7QUFBQTs7Ozs2QkEwQi9EO0FBQ1AsYUFBTyxLQUFBLEtBQUEsQ0FBQSxPQUFBLENBQUEsR0FBQSxDQUF1QjtBQUFBLFlBQUMsR0FBRCxRQUFDLEdBQUQ7QUFBQSxZQUFRRSxRQUFSLFFBQVFBLFFBQVI7QUFBQSxlQUM1QixLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUE7QUFDRSxVQUFBLEdBQUcsRUFETCxHQUFBO0FBRUUsVUFBQSxXQUFXLEVBQ1QsS0FISjtBQUtFLFVBQUEsYUFBYSxFQUxmLFVBQUE7QUFNRSxVQUFBLEtBQUssRUFBRUUsWUFBQUEsQ0FBQUEsVUFBQUEsQ0FBV0M7QUFOcEIsU0FBQSxFQURGLFFBQ0UsQ0FENEI7QUFBQSxPQUF2QixDQUFQO0FBWUQ7OztFQXZDd0NQLEtBQUssQ0FBakMsYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFZpZXcsIFN0eWxlU2hlZXQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG50eXBlIFN0YXRlID0ge1xuICBwb3J0YWxzOiBBcnJheTx7XG4gICAga2V5OiBudW1iZXI7XG4gICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgfT47XG59O1xuXG4vKipcbiAqIFBvcnRhbCBob3N0IGlzIHRoZSBjb21wb25lbnQgd2hpY2ggYWN0dWFsbHkgcmVuZGVycyBhbGwgUG9ydGFscy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9ydGFsTWFuYWdlciBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8e30sIFN0YXRlPiB7XG4gIHN0YXRlOiBTdGF0ZSA9IHtcbiAgICBwb3J0YWxzOiBbXSxcbiAgfTtcblxuICBtb3VudCA9IChrZXk6IG51bWJlciwgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSkgPT4ge1xuICAgIHRoaXMuc2V0U3RhdGUoKHN0YXRlKSA9PiAoe1xuICAgICAgcG9ydGFsczogWy4uLnN0YXRlLnBvcnRhbHMsIHsga2V5LCBjaGlsZHJlbiB9XSxcbiAgICB9KSk7XG4gIH07XG5cbiAgdXBkYXRlID0gKGtleTogbnVtYmVyLCBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlKSA9PlxuICAgIHRoaXMuc2V0U3RhdGUoKHN0YXRlKSA9PiAoe1xuICAgICAgcG9ydGFsczogc3RhdGUucG9ydGFscy5tYXAoKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKGl0ZW0ua2V5ID09PSBrZXkpIHtcbiAgICAgICAgICByZXR1cm4geyAuLi5pdGVtLCBjaGlsZHJlbiB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgfSksXG4gICAgfSkpO1xuXG4gIHVubW91bnQgPSAoa2V5OiBudW1iZXIpID0+XG4gICAgdGhpcy5zZXRTdGF0ZSgoc3RhdGUpID0+ICh7XG4gICAgICBwb3J0YWxzOiBzdGF0ZS5wb3J0YWxzLmZpbHRlcigoaXRlbSkgPT4gaXRlbS5rZXkgIT09IGtleSksXG4gICAgfSkpO1xuXG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5wb3J0YWxzLm1hcCgoeyBrZXksIGNoaWxkcmVuIH0pID0+IChcbiAgICAgIDxWaWV3XG4gICAgICAgIGtleT17a2V5fVxuICAgICAgICBjb2xsYXBzYWJsZT17XG4gICAgICAgICAgZmFsc2UgLyogTmVlZCBjb2xsYXBzYWJsZT1mYWxzZSBoZXJlIHRvIGNsaXAgdGhlIGVsZXZhdGlvbnMsIG90aGVyd2lzZSB0aGV5IGFwcGVhciBhYm92ZSBzaWJsaW5nIGNvbXBvbmVudHMgKi9cbiAgICAgICAgfVxuICAgICAgICBwb2ludGVyRXZlbnRzPVwiYm94LW5vbmVcIlxuICAgICAgICBzdHlsZT17U3R5bGVTaGVldC5hYnNvbHV0ZUZpbGx9XG4gICAgICA+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvVmlldz5cbiAgICApKTtcbiAgfVxufVxuIl19