{"version":3,"sources":["Text.tsx"],"names":["Text","theme","rest","root","React","setNativeProps","args","color","textAlign"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,IAA6C,GAAG,SAAhDA,IAAgD,CAAA,IAAA,EAAA,GAAA,EAGjD;AAAA,MAFH,KAEG,GAAA,IAAA,CAFH,KAEG;AAAA,MAFMC,KAEN,GAAA,IAAA,CAFMA,KAEN;AAAA,MAFgBC,IAEhB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACH,MAAMC,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAAb,IAAaA,CAAb;AAEAA,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,GAAAA,EAA+B;AAAA,WAAO;AACpCC,MAAAA,cAAc,EAAGC,wBAAAA,IAAD,EAAA;AAAA,YAAA,aAAA;;AAAA,eAAA,CAAA,aAAA,GAAkBH,IAAI,CAAtB,OAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAkBA,aAAAA,CAAAA,cAAAA,CAAlB,IAAkBA,CAAlB;AAAA;AADoB,KAAP;AAAA,GAA/BC;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,GAAG,EAFL,IAAA;AAGE,IAAA,KAAK,EAAE,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAEAH,KAAK,CAALA,KAAAA,CAFA,OAAA,CAAA,EAAA,EAAA,EAAA;AAGHM,MAAAA,KAAK,EAAEN,KAAK,CAALA,MAAAA,CAHJ,IAAA;AAIHO,MAAAA,SAAS,EAAE;AAJR,KAAA,CAAA,EAAA,KAAA;AAHT,GAAA,CAAA,CADF;AAVF,CAAA;;eA0Be,CAAA,GAAA,QAAA,CAAA,SAAA,EAAUJ,KAAK,CAALA,UAAAA,CAAV,IAAUA,CAAV,C","sourcesContent":["import * as React from 'react';\nimport { Text as NativeText, TextStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://facebook.github.io/react-native/docs/text.html#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n          textAlign: 'left',\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(React.forwardRef(Text));\n"]}