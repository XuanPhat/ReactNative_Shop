{"version":3,"sources":["Surface.tsx"],"names":["Surface","theme","rest","flattenedStyles","StyleSheet","elevation","dark","colors","backgroundColor","isDarkTheme","mode","surface"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAsC;AAAA,MAArC,KAAqC,GAAA,IAAA,CAArC,KAAqC;AAAA,MAA5BC,KAA4B,GAAA,IAAA,CAA5BA,KAA4B;AAAA,MAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;AACpD,MAAMC,eAAe,GAAGC,YAAAA,CAAAA,UAAAA,CAAAA,OAAAA,CAAAA,KAAAA,KAAxB,EAAA;AADoD,8BAEpD,eAFoD,CAE5CC,SAF4C;AAAA,MAE5CA,SAF4C,sCAEhC,CAFgC;AAAA,MAG9C,WAH8C,GAGpD,KAHoD,CAG5CC,IAH4C;AAAA,MAG9C,IAH8C,GAGpD,KAHoD,CAG9C,IAH8C;AAAA,MAGnBC,MAHmB,GAGpD,KAHoD,CAGnBA,MAHmB;AAIpD,SAEE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,QAAC,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CACL;AACEC,MAAAA,eAAe,EACbC,WAAW,IAAIC,IAAI,KAAnBD,UAAAA,GACI,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,SAAA,EAAmBF,MAAM,CAD7BE,OACI,CADJA,GAEIF,MAAM,CAACI;AAJf,KADK,EAOLN,SAAS,IAAI,CAAA,GAAA,OAAA,CAAA,OAAA,EAPR,SAOQ,CAPR,EAAA,KAAA;AAFT,GAAA,CAAA,CAFF;AAJF,CAAA;;eAsBe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,OAAA,C","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nconst Surface = ({ style, theme, ...rest }: Props) => {\n  const flattenedStyles = StyleSheet.flatten(style) || {};\n  const { elevation = 4 }: ViewStyle = flattenedStyles;\n  const { dark: isDarkTheme, mode, colors } = theme;\n  return (\n    // @ts-ignore\n    <Animated.View\n      {...rest}\n      style={[\n        {\n          backgroundColor:\n            isDarkTheme && mode === 'adaptive'\n              ? overlay(elevation, colors.surface)\n              : colors.surface,\n        },\n        elevation && shadow(elevation),\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(Surface);\n"]}