{"version":3,"sources":["tab-bar-item-ios.js"],"names":["ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","state","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","PureComponent","propTypes","isRequired","PropTypes","number","any","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash.isequal';\nimport pick from 'lodash.pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      selectedIconColor: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]}