4a02c9e0f8a2334eec48bfea7127e391
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Text = _interopRequireDefault(require("../Typography/Text"));

var _Divider = _interopRequireDefault(require("../Divider"));

var _theming = require("../../core/theming");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var DrawerSection = function DrawerSection(_ref) {
  var children = _ref.children,
      title = _ref.title,
      theme = _ref.theme,
      style = _ref.style,
      rest = _objectWithoutProperties(_ref, ["children", "title", "theme", "style"]);

  var colors = theme.colors,
      fonts = theme.fonts;
  var titleColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();
  var font = fonts.medium;
  return React.createElement(_reactNative.View, _extends({
    style: [styles.container, style]
  }, rest), title && React.createElement(_reactNative.View, {
    style: styles.titleContainer
  }, React.createElement(_Text.default, {
    numberOfLines: 1,
    style: _objectSpread(_objectSpread({
      color: titleColor
    }, font), {}, {
      marginLeft: 16
    })
  }, title)), children, React.createElement(_Divider.default, {
    style: styles.divider
  }));
};

DrawerSection.displayName = 'Drawer.Section';

var styles = _reactNative.StyleSheet.create({
  container: {
    marginBottom: 4
  },
  titleContainer: {
    height: 40,
    justifyContent: 'center'
  },
  divider: {
    marginTop: 4
  }
});

var _default = (0, _theming.withTheme)(DrawerSection);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRyYXdlclNlY3Rpb24udHN4Il0sIm5hbWVzIjpbIkRyYXdlclNlY3Rpb24iLCJzdHlsZSIsInJlc3QiLCJmb250cyIsInRpdGxlQ29sb3IiLCJjb2xvcnMiLCJmb250Iiwic3R5bGVzIiwidGl0bGUiLCJ0aXRsZUNvbnRhaW5lciIsImNvbG9yIiwibWFyZ2luTGVmdCIsImRpdmlkZXIiLCJjb250YWluZXIiLCJtYXJnaW5Cb3R0b20iLCJoZWlnaHQiLCJqdXN0aWZ5Q29udGVudCIsIm1hcmdpblRvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUEsTUFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsS0FBQSxHQUFBLHVCQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxjQUFBLENBQUE7O0FBQ0EsSUFBQSxLQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsb0JBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsUUFBQSxHQUFBLHNCQUFBLENBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQSxDQUFBOztBQUNBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdURBLElBQU1BLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQSxJQUFBLEVBQXVEO0FBQUEsTUFBdEQsUUFBc0QsR0FBQSxJQUFBLENBQXRELFFBQXNEO0FBQUEsTUFBdEQsS0FBc0QsR0FBQSxJQUFBLENBQXRELEtBQXNEO0FBQUEsTUFBdEQsS0FBc0QsR0FBQSxJQUFBLENBQXRELEtBQXNEO0FBQUEsTUFBNUJDLEtBQTRCLEdBQUEsSUFBQSxDQUE1QkEsS0FBNEI7QUFBQSxNQUFsQkMsSUFBa0IsR0FBQSx3QkFBQSxDQUFBLElBQUEsRUFBQSxDQUFBLFVBQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUFBLE1BQ3JFLE1BRHFFLEdBQzNFLEtBRDJFLENBQ3JFLE1BRHFFO0FBQUEsTUFDM0RDLEtBRDJELEdBQzNFLEtBRDJFLENBQzNEQSxLQUQyRDtBQUUzRSxNQUFNQyxVQUFVLEdBQUcsQ0FBQSxHQUFBLE1BQUEsQ0FBQSxPQUFBLEVBQU1DLE1BQU0sQ0FBWixJQUFBLEVBQUEsS0FBQSxDQUFBLElBQUEsRUFBQSxHQUFBLEdBQW5CLE1BQW1CLEVBQW5CO0FBQ0EsTUFBTUMsSUFBSSxHQUFHSCxLQUFLLENBQWxCLE1BQUE7QUFFQSxTQUNFLEtBQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFELElBQUEsRUFBQSxRQUFBLENBQUE7QUFBTSxJQUFBLEtBQUssRUFBRSxDQUFDSSxNQUFNLENBQVAsU0FBQSxFQUFBLEtBQUE7QUFBYixHQUFBLEVBQUEsSUFBQSxDQUFBLEVBQ0dDLEtBQUssSUFDSixLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUE7QUFBTSxJQUFBLEtBQUssRUFBRUQsTUFBTSxDQUFDRTtBQUFwQixHQUFBLEVBQ0UsS0FBQSxDQUFBLGFBQUEsQ0FBQyxLQUFBLENBQUQsT0FBQSxFQUFBO0FBQ0UsSUFBQSxhQUFhLEVBRGYsQ0FBQTtBQUVFLElBQUEsS0FBSyxFQUFBLGFBQUEsQ0FBQSxhQUFBLENBQUE7QUFBSUMsTUFBQUEsS0FBSyxFQUFFTjtBQUFYLEtBQUEsRUFBQSxJQUFBLENBQUEsRUFBQSxFQUFBLEVBQUE7QUFBZ0NPLE1BQUFBLFVBQVUsRUFBRTtBQUE1QyxLQUFBO0FBRlAsR0FBQSxFQUhOLEtBR00sQ0FERixDQUZKLEVBQUEsUUFBQSxFQVlFLEtBQUEsQ0FBQSxhQUFBLENBQUMsUUFBQSxDQUFELE9BQUEsRUFBQTtBQUFTLElBQUEsS0FBSyxFQUFFSixNQUFNLENBQUNLO0FBQXZCLEdBQUEsQ0FaRixDQURGO0FBTEYsQ0FBQTs7QUF1QkFaLGFBQWEsQ0FBYkEsV0FBQUEsR0FBQUEsZ0JBQUFBOztBQUVBLElBQU1PLE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JNLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxZQUFZLEVBQUU7QUFETCxHQURvQjtBQUkvQkwsRUFBQUEsY0FBYyxFQUFFO0FBQ2RNLElBQUFBLE1BQU0sRUFEUSxFQUFBO0FBRWRDLElBQUFBLGNBQWMsRUFBRTtBQUZGLEdBSmU7QUFRL0JKLEVBQUFBLE9BQU8sRUFBRTtBQUNQSyxJQUFBQSxTQUFTLEVBQUU7QUFESjtBQVJzQixDQUFsQixDQUFmOztlQWFlLENBQUEsR0FBQSxRQUFBLENBQUEsU0FBQSxFQUFBLGFBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb2xvciBmcm9tICdjb2xvcic7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBWaWV3U3R5bGUsIFN0eWxlU2hlZXQsIFN0eWxlUHJvcCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgVGV4dCBmcm9tICcuLi9UeXBvZ3JhcGh5L1RleHQnO1xuaW1wb3J0IERpdmlkZXIgZnJvbSAnLi4vRGl2aWRlcic7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRoUmVmPHR5cGVvZiBWaWV3PiAmIHtcbiAgLyoqXG4gICAqIFRpdGxlIHRvIHNob3cgYXMgdGhlIGhlYWRlciBmb3IgdGhlIHNlY3Rpb24uXG4gICAqL1xuICB0aXRsZT86IHN0cmluZztcbiAgLyoqXG4gICAqIENvbnRlbnQgb2YgdGhlIGBEcmF3ZXIuU2VjdGlvbmAuXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbn07XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gZ3JvdXAgY29udGVudCBpbnNpZGUgYSBuYXZpZ2F0aW9uIGRyYXdlci5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGZpZ3VyZT5cbiAqICAgICA8aW1nIGNsYXNzPVwibWVkaXVtXCIgc3JjPVwic2NyZWVuc2hvdHMvZHJhd2VyLXNlY3Rpb24ucG5nXCIgLz5cbiAqICAgPC9maWd1cmU+XG4gKiA8L2Rpdj5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IERyYXdlciB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XG4gKiAgIGNvbnN0IFthY3RpdmUsIHNldEFjdGl2ZV0gPSBSZWFjdC51c2VTdGF0ZSgnJyk7XG4gKlxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8RHJhd2VyLlNlY3Rpb24gdGl0bGU9XCJTb21lIHRpdGxlXCI+XG4gKiAgICAgICA8RHJhd2VyLkl0ZW1cbiAqICAgICAgICAgbGFiZWw9XCJGaXJzdCBJdGVtXCJcbiAqICAgICAgICAgYWN0aXZlPXthY3RpdmUgPT09ICdmaXJzdCd9XG4gKiAgICAgICAgIG9uUHJlc3M9eygpID0+IHNldEFjdGl2ZSgnZmlyc3QnKX1cbiAqICAgICAgIC8+XG4gKiAgICAgICA8RHJhd2VyLkl0ZW1cbiAqICAgICAgICAgbGFiZWw9XCJTZWNvbmQgSXRlbVwiXG4gKiAgICAgICAgIGFjdGl2ZT17YWN0aXZlID09PSAnc2Vjb25kJ31cbiAqICAgICAgICAgb25QcmVzcz17KCkgPT4gc2V0QWN0aXZlKCdzZWNvbmQnKX1cbiAqICAgICAgIC8+XG4gKiAgICAgPC9EcmF3ZXIuU2VjdGlvbj5cbiAqICAgKTtcbiAqIH07XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKiBgYGBcbiAqL1xuY29uc3QgRHJhd2VyU2VjdGlvbiA9ICh7IGNoaWxkcmVuLCB0aXRsZSwgdGhlbWUsIHN0eWxlLCAuLi5yZXN0IH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY29sb3JzLCBmb250cyB9ID0gdGhlbWU7XG4gIGNvbnN0IHRpdGxlQ29sb3IgPSBjb2xvcihjb2xvcnMudGV4dCkuYWxwaGEoMC41NCkucmdiKCkuc3RyaW5nKCk7XG4gIGNvbnN0IGZvbnQgPSBmb250cy5tZWRpdW07XG5cbiAgcmV0dXJuIChcbiAgICA8VmlldyBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIHN0eWxlXX0gey4uLnJlc3R9PlxuICAgICAge3RpdGxlICYmIChcbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy50aXRsZUNvbnRhaW5lcn0+XG4gICAgICAgICAgPFRleHRcbiAgICAgICAgICAgIG51bWJlck9mTGluZXM9ezF9XG4gICAgICAgICAgICBzdHlsZT17eyBjb2xvcjogdGl0bGVDb2xvciwgLi4uZm9udCwgbWFyZ2luTGVmdDogMTYgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgPC9UZXh0PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICApfVxuICAgICAge2NoaWxkcmVufVxuICAgICAgPERpdmlkZXIgc3R5bGU9e3N0eWxlcy5kaXZpZGVyfSAvPlxuICAgIDwvVmlldz5cbiAgKTtcbn07XG5cbkRyYXdlclNlY3Rpb24uZGlzcGxheU5hbWUgPSAnRHJhd2VyLlNlY3Rpb24nO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIG1hcmdpbkJvdHRvbTogNCxcbiAgfSxcbiAgdGl0bGVDb250YWluZXI6IHtcbiAgICBoZWlnaHQ6IDQwLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgfSxcbiAgZGl2aWRlcjoge1xuICAgIG1hcmdpblRvcDogNCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoRHJhd2VyU2VjdGlvbik7XG4iXX0=