7915ad4ac6da3a3c91a0ce57ca637177
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _lodash = _interopRequireDefault(require("lodash"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactNative = require("react-native");

var _Star = _interopRequireDefault(require("./components/Star"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var TapRating = function (_Component) {
  (0, _inherits2.default)(TapRating, _Component);

  var _super = _createSuper(TapRating);

  (0, _createClass2.default)(TapRating, null, [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      var defaultRating = nextProps.defaultRating;

      if (defaultRating !== prevState.defaultRating) {
        return {
          position: defaultRating,
          defaultRating: defaultRating
        };
      }

      return null;
    }
  }]);

  function TapRating() {
    var _this;

    (0, _classCallCheck2.default)(this, TapRating);
    _this = _super.call(this);
    _this.state = {
      position: 5
    };
    return _this;
  }

  (0, _createClass2.default)(TapRating, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var defaultRating = this.props.defaultRating;
      this.setState({
        position: defaultRating
      });
    }
  }, {
    key: "renderStars",
    value: function renderStars(rating_array) {
      return _lodash.default.map(rating_array, function (star, index) {
        return star;
      });
    }
  }, {
    key: "starSelectedInPosition",
    value: function starSelectedInPosition(position) {
      var onFinishRating = this.props.onFinishRating;
      if (typeof onFinishRating === 'function') onFinishRating(position);
      this.setState({
        position: position
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var position = this.state.position;
      var _this$props = this.props,
          count = _this$props.count,
          reviews = _this$props.reviews,
          showRating = _this$props.showRating,
          reviewColor = _this$props.reviewColor,
          reviewSize = _this$props.reviewSize;
      var rating_array = [];
      var starContainerStyle = [styles.starContainer];

      if (this.props.starContainerStyle) {
        starContainerStyle.push(this.props.starContainerStyle);
      }

      _lodash.default.times(count, function (index) {
        rating_array.push(_react.default.createElement(_Star.default, (0, _extends2.default)({
          key: index,
          position: index + 1,
          starSelectedInPosition: _this2.starSelectedInPosition.bind(_this2),
          fill: position >= index + 1
        }, _this2.props)));
      });

      return _react.default.createElement(_reactNative.View, {
        style: styles.ratingContainer
      }, showRating && _react.default.createElement(_reactNative.Text, {
        style: [styles.reviewText, {
          fontSize: reviewSize,
          color: reviewColor
        }]
      }, reviews[position - 1]), _react.default.createElement(_reactNative.View, {
        style: starContainerStyle
      }, this.renderStars(rating_array)));
    }
  }]);
  return TapRating;
}(_react.Component);

exports.default = TapRating;
TapRating.defaultProps = {
  defaultRating: 3,
  reviews: ["Terrible", "Bad", "Okay", "Good", "Great"],
  count: 5,
  showRating: true,
  reviewColor: 'rgba(230, 196, 46, 1)',
  reviewSize: 25
};

var styles = _reactNative.StyleSheet.create({
  ratingContainer: {
    backgroundColor: 'transparent',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center'
  },
  reviewText: {
    fontWeight: 'bold',
    margin: 10
  },
  starContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhcFJhdGluZy5qcyJdLCJuYW1lcyI6WyJUYXBSYXRpbmciLCJuZXh0UHJvcHMiLCJwcmV2U3RhdGUiLCJkZWZhdWx0UmF0aW5nIiwicG9zaXRpb24iLCJzdGF0ZSIsInByb3BzIiwic2V0U3RhdGUiLCJyYXRpbmdfYXJyYXkiLCJfIiwibWFwIiwic3RhciIsImluZGV4Iiwib25GaW5pc2hSYXRpbmciLCJjb3VudCIsInJldmlld3MiLCJzaG93UmF0aW5nIiwicmV2aWV3Q29sb3IiLCJyZXZpZXdTaXplIiwic3RhckNvbnRhaW5lclN0eWxlIiwic3R5bGVzIiwic3RhckNvbnRhaW5lciIsInB1c2giLCJ0aW1lcyIsInN0YXJTZWxlY3RlZEluUG9zaXRpb24iLCJiaW5kIiwicmF0aW5nQ29udGFpbmVyIiwicmV2aWV3VGV4dCIsImZvbnRTaXplIiwiY29sb3IiLCJyZW5kZXJTdGFycyIsIkNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJmbGV4RGlyZWN0aW9uIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZm9udFdlaWdodCIsIm1hcmdpbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRUE7O0FBQ0E7O0FBRUE7O0FBRUE7Ozs7OztJQUVxQkEsUzs7Ozs7Ozs2Q0FVYUMsUyxFQUFXQyxTLEVBQVc7QUFBQSxVQUM1Q0MsYUFENEMsR0FDMUJGLFNBRDBCLENBQzVDRSxhQUQ0Qzs7QUFHcEQsVUFBSUEsYUFBYSxLQUFLRCxTQUFTLENBQUNDLGFBQWhDLEVBQStDO0FBQzdDLGVBQU87QUFDTEMsVUFBQUEsUUFBUSxFQUFFRCxhQURMO0FBRUxBLFVBQUFBLGFBQWEsRUFBYkE7QUFGSyxTQUFQO0FBSUQ7O0FBQ0QsYUFBTyxJQUFQO0FBQ0Q7OztBQUVELHVCQUFjO0FBQUE7O0FBQUE7QUFDWjtBQUVBLFVBQUtFLEtBQUwsR0FBYTtBQUNYRCxNQUFB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QUFNRSxNQUFNLEdBQUdhLHdCQUFXQyxNQUFYLENBQWtCO0FBQy9CUixFQUFBQSxlQUFlLEVBQUU7QUFDZlMsSUFBQUEsZUFBZSxFQUFFLGFBREY7QUFFZkMsSUFBQUEsYUFBYSxFQUFFLFFBRkE7QUFHZkMsSUFBQUEsVUFBVSxFQUFFLFFBSEc7QUFJZkMsSUFBQUEsY0FBYyxFQUFFO0FBSkQsR0FEYztBQU8vQlgsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZZLElBQUFBLFVBQVUsRUFBRSxNQURGO0FBRVZDLElBQUFBLE1BQU0sRUFBRTtBQUZFLEdBUG1CO0FBVy9CbkIsRUFBQUEsYUFBYSxFQUFFO0FBQ2JlLElBQUFBLGFBQWEsRUFBRSxLQURGO0FBRWJDLElBQUFBLFVBQVUsRUFBRSxRQUZDO0FBR2JDLElBQUFBLGNBQWMsRUFBRTtBQUhIO0FBWGdCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuXG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IHsgU3R5bGVTaGVldCwgVGV4dCwgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBTdGFyIGZyb20gJy4vY29tcG9uZW50cy9TdGFyJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYXBSYXRpbmcgZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGRlZmF1bHRSYXRpbmc6IDMsXG4gICAgcmV2aWV3czogW1wiVGVycmlibGVcIiwgXCJCYWRcIiwgXCJPa2F5XCIsIFwiR29vZFwiLCBcIkdyZWF0XCJdLFxuICAgIGNvdW50OiA1LFxuICAgIHNob3dSYXRpbmc6IHRydWUsXG4gICAgcmV2aWV3Q29sb3I6ICdyZ2JhKDIzMCwgMTk2LCA0NiwgMSknLFxuICAgIHJldmlld1NpemU6IDI1XG4gIH07XG5cbiAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGNvbnN0IHsgZGVmYXVsdFJhdGluZyB9ID0gbmV4dFByb3BzO1xuXG4gICAgaWYgKGRlZmF1bHRSYXRpbmcgIT09IHByZXZTdGF0ZS5kZWZhdWx0UmF0aW5nKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb3NpdGlvbjogZGVmYXVsdFJhdGluZyxcbiAgICAgICAgZGVmYXVsdFJhdGluZ1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKClcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBwb3NpdGlvbjogNVxuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGNvbnN0IHsgZGVmYXVsdFJhdGluZyB9ID0gdGhpcy5wcm9wc1xuXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHBvc2l0aW9uOiBkZWZhdWx0UmF0aW5nIH0pXG4gIH1cblxuICByZW5kZXJTdGFycyhyYXRpbmdfYXJyYXkpIHtcbiAgICByZXR1cm4gXy5tYXAocmF0aW5nX2FycmF5LCAoc3RhciwgaW5kZXgpID0+IHtcbiAgICAgIHJldHVybiBzdGFyXG4gICAgfSlcbiAgfVxuXG4gIHN0YXJTZWxlY3RlZEluUG9zaXRpb24ocG9zaXRpb24pIHtcbiAgICBjb25zdCB7IG9uRmluaXNoUmF0aW5nIH0gPSB0aGlzLnByb3BzXG5cbiAgICBpZiAodHlwZW9mIG9uRmluaXNoUmF0aW5nID09PSAnZnVuY3Rpb24nKSBvbkZpbmlzaFJhdGluZyhwb3NpdGlvbik7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgcG9zaXRpb246IHBvc2l0aW9uIH0pXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBwb3NpdGlvbiB9ID0gdGhpcy5zdGF0ZVxuICAgIGNvbnN0IHsgY291bnQsIHJldmlld3MsIHNob3dSYXRpbmcsIHJldmlld0NvbG9yLCByZXZpZXdTaXplIH0gPSB0aGlzLnByb3BzXG4gICAgY29uc3QgcmF0aW5nX2FycmF5ID0gW11cbiAgICBjb25zdCBzdGFyQ29udGFpbmVyU3R5bGUgPSBbc3R5bGVzLnN0YXJDb250YWluZXJdXG5cbiAgICBpZiAodGhpcy5wcm9wcy5zdGFyQ29udGFpbmVyU3R5bGUpIHtcbiAgICAgICAgc3RhckNvbnRhaW5lclN0eWxlLnB1c2godGhpcy5wcm9wcy5zdGFyQ29udGFpbmVyU3R5bGUpO1xuICAgIH1cblxuICAgIF8udGltZXMoY291bnQsIGluZGV4ID0+IHtcbiAgICAgIHJhdGluZ19hcnJheS5wdXNoKFxuICAgICAgICA8U3RhclxuICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgcG9zaXRpb249e2luZGV4ICsgMX1cbiAgICAgICAgICBzdGFyU2VsZWN0ZWRJblBvc2l0aW9uPXt0aGlzLnN0YXJTZWxlY3RlZEluUG9zaXRpb24uYmluZCh0aGlzKX1cbiAgICAgICAgICBmaWxsPXtwb3NpdGlvbiA+PSBpbmRleCArIDF9XG4gICAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfSlcblxuICAgIHJldHVybiAoXG4gICAgICA8VmlldyBzdHlsZT17c3R5bGVzLnJhdGluZ0NvbnRhaW5lcn0+XG4gICAgICAgIHsgc2hvd1JhdGluZyAmJlxuICAgICAgICAgIDxUZXh0IHN0eWxlPXtbc3R5bGVzLnJldmlld1RleHQsIHtmb250U2l6ZTogcmV2aWV3U2l6ZSwgY29sb3I6IHJldmlld0NvbG9yfV19PlxuICAgICAgICAgICAge3Jldmlld3NbcG9zaXRpb24gLSAxXX1cbiAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIH1cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0YXJDb250YWluZXJTdHlsZX0+XG4gICAgICAgICAge3RoaXMucmVuZGVyU3RhcnMocmF0aW5nX2FycmF5KX1cbiAgICAgICAgPC9WaWV3PlxuICAgICAgPC9WaWV3PlxuICAgICk7XG4gIH1cbn1cblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICByYXRpbmdDb250YWluZXI6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsXG4gICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICB9LFxuICByZXZpZXdUZXh0OiB7XG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIG1hcmdpbjogMTAsXG4gIH0sXG4gIHN0YXJDb250YWluZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gIH1cbn0pO1xuIl19