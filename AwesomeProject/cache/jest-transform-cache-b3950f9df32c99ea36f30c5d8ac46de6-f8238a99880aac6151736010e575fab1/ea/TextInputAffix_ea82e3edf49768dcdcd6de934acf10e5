52d49c5be528953dc8c91bbc4ad8834f
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AffixAdornment = exports.TextInputAffix = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _color = _interopRequireDefault(require("color"));

var _reactNative = require("react-native");

var _theming = require("../../../core/theming");

var _enums = require("./enums");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var AFFIX_OFFSET = 12;

var AffixContext = _react.default.createContext({
  textStyle: {
    fontFamily: '',
    color: ''
  },
  topPosition: null,
  side: _enums.AdornmentSide.Left
});

var AffixAdornment = function AffixAdornment(_ref) {
  var affix = _ref.affix,
      side = _ref.side,
      textStyle = _ref.textStyle,
      topPosition = _ref.topPosition,
      onLayout = _ref.onLayout,
      visible = _ref.visible,
      paddingHorizontal = _ref.paddingHorizontal;
  return _react.default.createElement(AffixContext.Provider, {
    value: {
      side: side,
      textStyle: textStyle,
      topPosition: topPosition,
      onLayout: onLayout,
      visible: visible,
      paddingHorizontal: paddingHorizontal
    }
  }, affix);
};

exports.AffixAdornment = AffixAdornment;

var TextInputAffix = function TextInputAffix(_ref2) {
  var text = _ref2.text,
      labelStyle = _ref2.textStyle,
      theme = _ref2.theme;

  var _react$default$useCon = _react.default.useContext(AffixContext),
      textStyle = _react$default$useCon.textStyle,
      onLayout = _react$default$useCon.onLayout,
      topPosition = _react$default$useCon.topPosition,
      side = _react$default$useCon.side,
      visible = _react$default$useCon.visible,
      paddingHorizontal = _react$default$useCon.paddingHorizontal;

  var textColor = (0, _color.default)(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();
  var offset = typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;
  var style = (0, _defineProperty2.default)({
    top: topPosition
  }, side, offset);
  return _react.default.createElement(_reactNative.Animated.View, {
    style: [styles.container, style, {
      opacity: (visible === null || visible === void 0 ? void 0 : visible.interpolate({
        inputRange: [0, 1],
        outputRange: [1, 0]
      })) || 1
    }],
    onLayout: onLayout
  }, _react.default.createElement(_reactNative.Text, {
    style: [{
      color: textColor
    }, textStyle, labelStyle]
  }, text));
};

exports.TextInputAffix = TextInputAffix;
TextInputAffix.displayName = 'TextInput.Affix';

var styles = _reactNative.StyleSheet.create({
  container: {
    position: 'absolute',
    justifyContent: 'center',
    alignItems: 'center'
  }
});

var _default = (0, _theming.withTheme)(TextInputAffix);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRleHRJbnB1dEFmZml4LnRzeCJdLCJuYW1lcyI6WyJBRkZJWF9PRkZTRVQiLCJBZmZpeENvbnRleHQiLCJ0ZXh0U3R5bGUiLCJmb250RmFtaWx5IiwiY29sb3IiLCJ0b3BQb3NpdGlvbiIsInNpZGUiLCJBZG9ybm1lbnRTaWRlIiwiTGVmdCIsIkFmZml4QWRvcm5tZW50IiwicGFkZGluZ0hvcml6b250YWwiLCJvbkxheW91dCIsInZpc2libGUiLCJUZXh0SW5wdXRBZmZpeCIsInRoZW1lIiwiUmVhY3QiLCJ0ZXh0Q29sb3IiLCJvZmZzZXQiLCJzdHlsZSIsInRvcCIsInN0eWxlcyIsIm9wYWNpdHkiLCJpbnB1dFJhbmdlIiwib3V0cHV0UmFuZ2UiLCJjb250YWluZXIiLCJwb3NpdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLE1BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE1BQUEsR0FBQSxzQkFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBOztBQVNBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSx1QkFBQSxDQUFBOztBQUNBLElBQUEsTUFBQSxHQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUE7Ozs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxHQUFsQixFQUFBOztBQXFCQSxJQUFNQyxZQUFZLEdBQUcsTUFBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQWtDO0FBQ3JEQyxFQUFBQSxTQUFTLEVBQUU7QUFBRUMsSUFBQUEsVUFBVSxFQUFaLEVBQUE7QUFBa0JDLElBQUFBLEtBQUssRUFBRTtBQUF6QixHQUQwQztBQUVyREMsRUFBQUEsV0FBVyxFQUYwQyxJQUFBO0FBR3JEQyxFQUFBQSxJQUFJLEVBQUVDLE1BQUFBLENBQUFBLGFBQUFBLENBQWNDO0FB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QUVBLElBQU1PLE1BQU0sR0FBRyxZQUFBLENBQUEsVUFBQSxDQUFBLE1BQUEsQ0FBa0I7QUFDL0JJLEVBQUFBLFNBQVMsRUFBRTtBQUNUQyxJQUFBQSxRQUFRLEVBREMsVUFBQTtBQUVUQyxJQUFBQSxjQUFjLEVBRkwsUUFBQTtBQUdUQyxJQUFBQSxVQUFVLEVBQUU7QUFISDtBQURvQixDQUFsQixDQUFmOztlQVFlLENBQUEsR0FBQSxRQUFBLENBQUEsU0FBQSxFQUFBLGNBQUEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHtcbiAgVGV4dCxcbiAgU3R5bGVTaGVldCxcbiAgU3R5bGVQcm9wLFxuICBUZXh0U3R5bGUsXG4gIExheW91dENoYW5nZUV2ZW50LFxuICBBbmltYXRlZCxcbn0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IHsgd2l0aFRoZW1lIH0gZnJvbSAnLi4vLi4vLi4vY29yZS90aGVtaW5nJztcbmltcG9ydCB7IEFkb3JubWVudFNpZGUgfSBmcm9tICcuL2VudW1zJztcblxuY29uc3QgQUZGSVhfT0ZGU0VUID0gMTI7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHRleHQ6IHN0cmluZztcbiAgb25MYXlvdXQ/OiAoZXZlbnQ6IExheW91dENoYW5nZUV2ZW50KSA9PiB2b2lkO1xuICB0ZXh0U3R5bGU/OiBTdHlsZVByb3A8VGV4dFN0eWxlPjtcbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgdGhlbWU6IFJlYWN0TmF0aXZlUGFwZXIuVGhlbWU7XG59O1xuXG50eXBlIENvbnRleHRTdGF0ZSA9IHtcbiAgdG9wUG9zaXRpb246IG51bWJlciB8IG51bGw7XG4gIG9uTGF5b3V0PzogKGV2ZW50OiBMYXlvdXRDaGFuZ2VFdmVudCkgPT4gdm9pZDtcbiAgdmlzaWJsZT86IEFuaW1hdGVkLlZhbHVlO1xuICB0ZXh0U3R5bGU/OiBTdHlsZVByb3A8VGV4dFN0eWxlPjtcbiAgc2lkZTogQWRvcm5tZW50U2lkZTtcbiAgcGFkZGluZ0hvcml6b250YWw/OiBudW1iZXIgfCBzdHJpbmc7XG59O1xuXG5jb25zdCBBZmZpeENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0PENvbnRleHRTdGF0ZT4oe1xuICB0ZXh0U3R5bGU6IHsgZm9udEZhbWlseTogJycsIGNvbG9yOiAnJyB9LFxuICB0b3BQb3NpdGlvbjogbnVsbCxcbiAgc2lkZTogQWRvcm5tZW50U2lkZS5MZWZ0LFxufSk7XG5cbmNvbnN0IEFmZml4QWRvcm5tZW50OiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxcbiAge1xuICAgIGFmZml4OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgdGVzdElEOiBzdHJpbmc7XG4gIH0gJiBDb250ZXh0U3RhdGVcbj4gPSAoe1xuICBhZmZpeCxcbiAgc2lkZSxcbiAgdGV4dFN0eWxlLFxuICB0b3BQb3NpdGlvbixcbiAgb25MYXlvdXQsXG4gIHZpc2libGUsXG4gIHBhZGRpbmdIb3Jpem9udGFsLFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBZmZpeENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIHNpZGUsXG4gICAgICAgIHRleHRTdHlsZSxcbiAgICAgICAgdG9wUG9zaXRpb24sXG4gICAgICAgIG9uTGF5b3V0LFxuICAgICAgICB2aXNpYmxlLFxuICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbCxcbiAgICAgIH19XG4gICAgPlxuICAgICAge2FmZml4fVxuICAgIDwvQWZmaXhDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuY29uc3QgVGV4dElucHV0QWZmaXggPSAoeyB0ZXh0LCB0ZXh0U3R5bGU6IGxhYmVsU3R5bGUsIHRoZW1lIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHtcbiAgICB0ZXh0U3R5bGUsXG4gICAgb25MYXlvdXQsXG4gICAgdG9wUG9zaXRpb24sXG4gICAgc2lkZSxcbiAgICB2aXNpYmxlLFxuICAgIHBhZGRpbmdIb3Jpem9udGFsLFxuICB9ID0gUmVhY3QudXNlQ29udGV4dChBZmZpeENvbnRleHQpO1xuICBjb25zdCB0ZXh0Q29sb3IgPSBjb2xvcih0aGVtZS5jb2xvcnMudGV4dClcbiAgICAuYWxwaGEodGhlbWUuZGFyayA/IDAuNyA6IDAuNTQpXG4gICAgLnJnYigpXG4gICAgLnN0cmluZygpO1xuXG4gIGNvbnN0IG9mZnNldCA9XG4gICAgdHlwZW9mIHBhZGRpbmdIb3Jpem9udGFsID09PSAnbnVtYmVyJyA/IHBhZGRpbmdIb3Jpem9udGFsIDogQUZGSVhfT0ZGU0VUO1xuXG4gIGNvbnN0IHN0eWxlID0ge1xuICAgIHRvcDogdG9wUG9zaXRpb24sXG4gICAgW3NpZGVdOiBvZmZzZXQsXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8QW5pbWF0ZWQuVmlld1xuICAgICAgc3R5bGU9e1tcbiAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgc3R5bGUsXG4gICAgICAgIHtcbiAgICAgICAgICBvcGFjaXR5OlxuICAgICAgICAgICAgdmlzaWJsZT8uaW50ZXJwb2xhdGUoe1xuICAgICAgICAgICAgICBpbnB1dFJhbmdlOiBbMCwgMV0sXG4gICAgICAgICAgICAgIG91dHB1dFJhbmdlOiBbMSwgMF0sXG4gICAgICAgICAgICB9KSB8fCAxLFxuICAgICAgICB9LFxuICAgICAgXX1cbiAgICAgIG9uTGF5b3V0PXtvbkxheW91dH1cbiAgICA+XG4gICAgICA8VGV4dCBzdHlsZT17W3sgY29sb3I6IHRleHRDb2xvciB9LCB0ZXh0U3R5bGUsIGxhYmVsU3R5bGVdfT57dGV4dH08L1RleHQ+XG4gICAgPC9BbmltYXRlZC5WaWV3PlxuICApO1xufTtcblRleHRJbnB1dEFmZml4LmRpc3BsYXlOYW1lID0gJ1RleHRJbnB1dC5BZmZpeCc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShUZXh0SW5wdXRBZmZpeCk7XG5cbi8vIEBjb21wb25lbnQtZG9jcyBpZ25vcmUtbmV4dC1saW5lXG5leHBvcnQgeyBUZXh0SW5wdXRBZmZpeCwgQWZmaXhBZG9ybm1lbnQgfTtcbiJdfQ==