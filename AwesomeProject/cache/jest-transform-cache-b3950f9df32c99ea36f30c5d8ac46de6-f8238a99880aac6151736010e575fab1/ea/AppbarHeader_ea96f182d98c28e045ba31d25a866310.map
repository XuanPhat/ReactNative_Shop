{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","dark","mode","rest","height","DEFAULT_APPBAR_HEIGHT","elevation","backgroundColor","zIndex","StyleSheet","customBackground","isDarkTheme","colors","Wrapper","View","SafeAreaView","marginTop","styles","appbar","AppbarHeaderWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport { Appbar } from './AppbarElements';\nimport { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = (props: Props) => {\n  const {\n    // Don't use default props since we check it to know whether we should use SafeAreaView\n    statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n    style,\n    dark,\n    ...rest\n  } = props;\n\n  const { dark: isDarkTheme, colors, mode } = rest.theme;\n  const {\n    height = DEFAULT_APPBAR_HEIGHT,\n    elevation = 4,\n    backgroundColor: customBackground,\n    zIndex = 0,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  // Let the user override the behaviour\n  const Wrapper =\n    typeof props.statusBarHeight === 'number' ? View : SafeAreaView;\n  return (\n    <Wrapper\n      style={\n        [\n          { backgroundColor, zIndex, elevation },\n          shadow(elevation),\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Appbar\n        style={[\n          //@ts-ignore Types of property 'backgroundColor' are incompatible.\n          { height, backgroundColor, marginTop: statusBarHeight },\n          styles.appbar,\n          restStyle,\n        ]}\n        dark={dark}\n        {...rest}\n      />\n    </Wrapper>\n  );\n};\n\nAppbarHeader.displayName = 'Appbar.Header';\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = withTheme(AppbarHeader);\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"]}