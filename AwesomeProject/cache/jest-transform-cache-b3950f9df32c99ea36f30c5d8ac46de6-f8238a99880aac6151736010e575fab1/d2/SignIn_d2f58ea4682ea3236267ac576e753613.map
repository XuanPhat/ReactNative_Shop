{"version":3,"sources":["SignIn.js"],"names":["SignInSchema","Yup","object","shape","email","string","required","password","min","SignIn","Touch","Platform","OS","TouchableOpacity","TouchableWithoutFeedback","loading","state","auth","signedInUser","React","useState","visible","setVisible","dispatch","paperColor","colors","navigation","containerRef","useRef","logoRef","isSwitchOn","setIsSwitchOn","loggedInUser","setLoggedInUser","getData","AsyncStorage","getItem","data","JSON","parse","console","log","useEffect","keyboardDidShowListener","Keyboard","addListener","current","transitionTo","height","fadeOutUpBig","keyboardDidHideListener","fadeInDownBig","remove","flex","backgroundColor","WHITE","dismiss","undefined","values","formik","primary","justifyContent","alignItems","width","uri","color","fontWeight","fontSize","textAlign","padding","paddingTop","borderWidth","borderBottomWidth","marginLeft","handleBlur","handleChange","flexDirection","alignSelf","paddingHorizontal","clear","marginBottom","marginTop","navigate","PRIMARY_FONT","error","elevation","handleSubmit"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\r\n/* eslint-disable react/prop-types */\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport * as Yup from 'yup';\r\n\r\nimport React from 'react';\r\nimport {Button, Headline, TouchableRipple, useTheme} from 'react-native-paper';\r\nimport {\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Text,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  View,\r\n  Image,\r\n} from 'react-native';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {Formik} from 'formik';\r\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport TextBox from '../../../components/Texbox';\r\nimport colors from '../../../constants/color';\r\nimport {signInAction} from '../actions/';\r\nimport {Switch} from 'react-native-paper';\r\nimport FastImage from 'react-native-fast-image';\r\nimport {Alert} from 'react-native';\r\n\r\n// YUP\r\nconst SignInSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Gmail không đúng định dạng')\r\n    .required(' Địa chỉ gmail không được để trống'),\r\n  password: Yup.string()\r\n    .min(6, 'mật khẩu phải lớn hơn 6 kí tự')\r\n    .required('Mật khẩu không được để trống'),\r\n});\r\n\r\nconst SignIn = () => {\r\n  const Touch =\r\n    Platform.OS === 'ios' ? TouchableOpacity : TouchableWithoutFeedback;\r\n  // REDUX\r\n  const loading = useSelector((state) => state.auth.loading);\r\n  const signedInUser = useSelector((state) => state.auth);\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  // THEMNE\r\n  const paperColor = useTheme().colors;\r\n\r\n  // NAVIGATION\r\n  const navigation = useNavigation();\r\n  // REFS\r\n  const containerRef = React.useRef(null);\r\n  const logoRef = React.useRef(null);\r\n  const [isSwitchOn, setIsSwitchOn] = React.useState(false);\r\n  // const onToggleSwitch = () => {\r\n\r\n  //   setIsSwitchOn(!isSwitchOn);\r\n\r\n  // };\r\n\r\n  const [loggedInUser, setLoggedInUser] = React.useState(null);\r\n\r\n  // async - await\r\n  // const storeData = async (value) => {\r\n  //   try {\r\n  //     await AsyncStorage.setItem('@LoggedInUser', JSON.stringify(value));\r\n  //   } catch (e) {\r\n  //     // saving error\r\n  //     console.log('Save failed: ', e);\r\n  //   }\r\n  // };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      let data = await AsyncStorage.getItem('@LoggedInUser');\r\n      if (data) {\r\n        return JSON.parse(data);\r\n      }\r\n      return null;\r\n    } catch (e) {\r\n      // saving error\r\n      console.log('Get failed: ', e);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const keyboardDidShowListener = Keyboard.addListener(\r\n      'keyboardDidShow',\r\n      () => {\r\n        containerRef.current.transitionTo({height: 0}, 1000);\r\n        // console.log(containerRef.current.transitionTo({height: 0}, 1000));\r\n\r\n        containerRef.current.fadeOutUpBig(750);\r\n        logoRef.current.transitionTo({height: 0}, 750);\r\n        logoRef.current.fadeOutUpBig(500);\r\n      },\r\n    );\r\n    const keyboardDidHideListener = Keyboard.addListener(\r\n      'keyboardDidHide',\r\n      () => {\r\n        containerRef.current.transitionTo({height: 170}, 500); //240 của t\r\n        containerRef.current.fadeInDownBig(750);\r\n\r\n        logoRef.current.transitionTo({height: 240}, 150);\r\n        logoRef.current.fadeInDownBig(1000);\r\n      },\r\n    );\r\n\r\n    return () => {\r\n      keyboardDidHideListener.remove();\r\n      keyboardDidShowListener.remove();\r\n    };\r\n  }, []);\r\n\r\n  // const getinfologin = () => {\r\n  //   getData().then((u) => {\r\n  //     if (u) {\r\n  //       if (u.email && u.password) setIsSwitchOn(true);\r\n  //     }\r\n  //     setLoggedInUser(u);\r\n  //   });\r\n  // };\r\n  // React.useEffect(getinfologin, []);\r\n  // console.log(loggedInUser);\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <TouchableOpacity\r\n        activeOpacity={1}\r\n        style={{flex: 1, backgroundColor: colors.WHITE}}\r\n        onPress={Keyboard.dismiss}>\r\n        <KeyboardAvoidingView\r\n          behavior={Platform.OS === 'ios' ? 'padding' : undefined}\r\n          style={{flex: 1}}>\r\n          <Formik\r\n            enableReinitialize\r\n            initialValues={{\r\n              email: loggedInUser ? loggedInUser.email : '',\r\n              password: loggedInUser ? loggedInUser.password : '',\r\n            }}\r\n            validationSchema={SignInSchema}\r\n            onSubmit={(values) => {\r\n              loading;\r\n              dispatch(signInAction(values.email, values.password));\r\n\r\n              if (isSwitchOn == true) {\r\n                // storeData({\r\n                //   email: values.email,\r\n                //   password: values.password,\r\n                // });\r\n              }\r\n\r\n              // setIsSwitchOn(true);\r\n            }}>\r\n            {(formik) => (\r\n              <React.Fragment>\r\n                <Animatable.View\r\n                  ref={containerRef}\r\n                  duration={1000}\r\n                  animation=\"slideInDown\"\r\n                  style={{\r\n                    height: 240,\r\n                    backgroundColor: paperColor.primary,\r\n                    justifyContent: 'center',\r\n                  }}>\r\n                  <View\r\n                    style={{justifyContent: 'center', alignItems: 'center'}}>\r\n                    <Animatable.View\r\n                      style={{\r\n                        height: 200,\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                      }}\r\n                      ref={logoRef}>\r\n                      {/* <Icon name=\"cloud-upload\" color=\"white\" size={120} /> */}\r\n                      <FastImage\r\n                        style={{width: 100, height: 80}}\r\n                        source={{\r\n                          uri: 'http://tranhuuthang.com/app/logo.png',\r\n                        }}\r\n                        resizeMode=\"contain\"\r\n                      />\r\n                      <Text\r\n                        style={{\r\n                          color: 'white',\r\n                          fontWeight: '700',\r\n                          fontSize: 20,\r\n                        }}>\r\n                        SHOP KATSU - The Zoo\r\n                      </Text>\r\n                      <View height={4} />\r\n                      <Text style={{color: 'white', fontWeight: '700'}}>\r\n                        Buy everything with you need...\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          color: 'white',\r\n                          fontWeight: '700',\r\n                          textAlign: 'center',\r\n                        }}>\r\n                        <Text>Trần Hữu Thắng (Nhóm trưởng),</Text>\r\n                        <Text>Nguyễn Xuân Phát ,</Text>\r\n                        <Text>Võ Thị Thu Phương </Text>\r\n                      </Text>\r\n                    </Animatable.View>\r\n                  </View>\r\n                </Animatable.View>\r\n                <View\r\n                  style={{alignItems: 'center', padding: 16, paddingTop: 36}}>\r\n                  <Headline\r\n                    style={{color: paperColor.primary, fontWeight: '400'}}>\r\n                    ĐĂNG NHẬP\r\n                  </Headline>\r\n                </View>\r\n                <View\r\n                  style={{flex: 0, justifyContent: 'flex-start', padding: 16}}>\r\n                  <TextBox\r\n                    name=\"email\"\r\n                    autoCapitalize=\"none\"\r\n                    iconName=\"email\"\r\n                    disabled={loading}\r\n                    placeholder=\"Nhập email của bạn \"\r\n                    containerStyle={{borderWidth: 0, backgroundColor: 'white'}}\r\n                    inputContainerStyle={{borderBottomWidth: 1.5}}\r\n                    leftIconContainerStyle={{marginLeft: 12}}\r\n                    onBlur={() => {\r\n                      formik.handleBlur('email'), setIsSwitchOn(false);\r\n                    }}\r\n                    onChangeText={formik.handleChange('email')}\r\n                    value={formik.values.email}\r\n                  />\r\n                  <View height={16} />\r\n                  <TextBox\r\n                    name=\"password\"\r\n                    iconName=\"lock\"\r\n                    secureTextEntry\r\n                    disabled={loading}\r\n                    placeholder=\"Mật khẩu\"\r\n                    containerStyle={{borderWidth: 0, backgroundColor: 'white'}}\r\n                    inputContainerStyle={{borderBottomWidth: 1.5}}\r\n                    leftIconContainerStyle={{marginLeft: 12}}\r\n                    onBlur={() => {\r\n                      formik.handleBlur('password');\r\n                    }}\r\n                    onChangeText={formik.handleChange('password')}\r\n                    value={formik.values.password}\r\n                  />\r\n                  <View\r\n                    style={{\r\n                      flexDirection: 'row',\r\n                      justifyContent: 'space-between',\r\n                    }}>\r\n                    <TouchableRipple\r\n                      style={{alignSelf: 'center'}}\r\n                      onPress={() => {\r\n                        // storeData({\r\n                        //   email: formik.values.email,\r\n                        //   password: formik.values.password,\r\n                        // });\r\n                        setIsSwitchOn(true);\r\n                      }}>\r\n                      <Text\r\n                        style={{alignSelf: 'center', paddingHorizontal: 10}}>\r\n                        Lưu mật khẩu:\r\n                      </Text>\r\n                    </TouchableRipple>\r\n\r\n                    {\r\n                      <Switch\r\n                        style={{alignSelf: 'center', marginLeft: -80}}\r\n                        value={\r\n                          formik.values.email && formik.values.password\r\n                            ? isSwitchOn\r\n                            : null\r\n                        }\r\n                        color=\"#a55eea\"\r\n                        onValueChange={() => {\r\n                          setIsSwitchOn(false);\r\n                          if (isSwitchOn == true) {\r\n                            AsyncStorage.clear();\r\n                          } else {\r\n                            // storeData({\r\n                            //   email: formik.values.email,\r\n                            //   password: formik.values.password,\r\n                            // });\r\n                            setIsSwitchOn(true);\r\n                          }\r\n                        }}\r\n                      />\r\n                    }\r\n\r\n                    <View\r\n                      style={{\r\n                        alignItems: 'flex-end',\r\n                        marginBottom: 12,\r\n                        marginTop: 12,\r\n                      }}>\r\n                      <TouchableRipple\r\n                        onPress={() => {\r\n                          navigation.navigate('ForgotPasswordScreen');\r\n                        }}>\r\n                        <Text style={{color: colors.PRIMARY_FONT}}>\r\n                          Quên mật khẩu?\r\n                        </Text>\r\n                      </TouchableRipple>\r\n                    </View>\r\n                  </View>\r\n                  {signedInUser.error && (\r\n                    <Text style={{color: 'red', textAlign: 'center'}}>\r\n                      {signedInUser.error == 'auth/user-not-found'\r\n                        ? 'Tài khoản gmail không tồn tại'\r\n                        : 'Mật khẩu không chính xác'}\r\n                    </Text>\r\n                  )}\r\n                </View>\r\n                <Animatable.View\r\n                  animation=\"slideInUp\"\r\n                  duration={1000}\r\n                  style={{flex: 1, padding: 16, justifyContent: 'flex-end'}}>\r\n                  <Button\r\n                    disabled={loading}\r\n                    loading={loading}\r\n                    labelStyle={{fontSize: 18}}\r\n                    contentStyle={{\r\n                      height: 48,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }}\r\n                    style={{elevation: 0}}\r\n                    uppercase={false}\r\n                    icon=\"key\"\r\n                    mode=\"contained\"\r\n                    onPress={formik.handleSubmit}\r\n                    dark>\r\n                    {loading ? 'Đang đăng nhập ...' : 'Đăng nhập'}\r\n                  </Button>\r\n\r\n                  <Touch\r\n                    onPress={() => {\r\n                      navigation.navigate('RegisterScreen');\r\n                    }}>\r\n                    <View style={{alignItems: 'center', padding: 12}}>\r\n                      <Text style={{color: colors.PRIMARY_FONT}}>\r\n                        Bạn chưa có tài khoản? Đăng ký\r\n                      </Text>\r\n                    </View>\r\n                  </Touch>\r\n                </Animatable.View>\r\n              </React.Fragment>\r\n            )}\r\n          </Formik>\r\n        </KeyboardAvoidingView>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"]}