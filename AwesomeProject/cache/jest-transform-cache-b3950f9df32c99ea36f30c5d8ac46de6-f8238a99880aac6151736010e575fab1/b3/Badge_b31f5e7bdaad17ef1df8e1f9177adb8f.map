{"version":3,"sources":["Badge.tsx"],"names":["defaultSize","Badge","size","visible","rest","current","opacity","React","Animated","animation","scale","toValue","duration","useNativeDriver","backgroundColor","theme","notification","StyleSheet","textColor","black","white","borderRadius","color","fontSize","lineHeight","height","minWidth","styles","container","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? black : white;\n\n  const borderRadius = size / 2;\n\n  return (\n    // @ts-ignore\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...theme.fonts.regular,\n          lineHeight: size,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]}