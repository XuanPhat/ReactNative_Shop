4569e5ab788f1c3e18795a1cde6378d9
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DataTableHeader = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _color = _interopRequireDefault(require("color"));

var _reactNative = require("react-native");

var _colors = require("../../styles/colors");

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var DataTableHeader = function DataTableHeader(_ref) {
  var children = _ref.children,
      style = _ref.style,
      theme = _ref.theme,
      rest = _objectWithoutProperties(_ref, ["children", "style", "theme"]);

  var borderBottomColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();
  return React.createElement(_reactNative.View, _extends({}, rest, {
    style: [styles.header, {
      borderBottomColor: borderBottomColor
    }, style]
  }), children);
};

exports.DataTableHeader = DataTableHeader;
DataTableHeader.displayName = 'DataTable.Header';

var styles = _reactNative.StyleSheet.create({
  header: {
    flexDirection: 'row',
    height: 48,
    paddingHorizontal: 16,
    borderBottomWidth: _reactNative.StyleSheet.hairlineWidth * 2
  }
});

var _default = (0, _theming.withTheme)(DataTableHeader);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRhdGFUYWJsZUhlYWRlci50c3giXSwibmFtZXMiOlsiRGF0YVRhYmxlSGVhZGVyIiwidGhlbWUiLCJyZXN0IiwiYm9yZGVyQm90dG9tQ29sb3IiLCJ3aGl0ZSIsImJsYWNrIiwic3R5bGVzIiwiaGVhZGVyIiwiZmxleERpcmVjdGlvbiIsImhlaWdodCIsInBhZGRpbmdIb3Jpem9udGFsIiwiYm9yZGVyQm90dG9tV2lkdGgiLCJTdHlsZVNoZWV0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQSxLQUFBLEdBQUEsdUJBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxNQUFBLEdBQUEsc0JBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ0EsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEscUJBQUEsQ0FBQTs7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsb0JBQUEsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0NBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQSxJQUFBLEVBQWdEO0FBQUEsTUFBL0MsUUFBK0MsR0FBQSxJQUFBLENBQS9DLFFBQStDO0FBQUEsTUFBL0MsS0FBK0MsR0FBQSxJQUFBLENBQS9DLEtBQStDO0FBQUEsTUFBNUJDLEtBQTRCLEdBQUEsSUFBQSxDQUE1QkEsS0FBNEI7QUFBQSxNQUFsQkMsSUFBa0IsR0FBQSx3QkFBQSxDQUFBLElBQUEsRUFBQSxDQUFBLFVBQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxDQUFBLENBQUE7O0FBQ3RFLE1BQU1DLGlCQUFpQixHQUFHLENBQUEsR0FBQSxNQUFBLENBQUEsT0FBQSxFQUFNRixLQUFLLENBQUxBLElBQUFBLEdBQWFHLE9BQUFBLENBQWJILEtBQUFBLEdBQXFCSSxPQUFBQSxDQUEzQixLQUFBLEVBQUEsS0FBQSxDQUFBLElBQUEsRUFBQSxHQUFBLEdBQTFCLE1BQTBCLEVBQTFCO0FBS0EsU0FDRSxLQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBRCxJQUFBLEVBQUEsUUFBQSxDQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUE7QUFBZ0IsSUFBQSxLQUFLLEVBQUUsQ0FBQ0MsTUFBTSxDQUFQLE1BQUEsRUFBZ0I7QUFBRUgsTUFBQUEsaUJBQUFBLEVBQUFBO0FBQUYsS0FBaEIsRUFBQSxLQUFBO0FBQXZCLEdBQUEsQ0FBQSxFQURGLFFBQ0UsQ0FERjtBQU5GLENBQUE7OztBQWFBSCxlQUFlLENBQWZBLFdBQUFBLEdBQUFBLGtCQUFBQTs7QUFFQSxJQUFNTSxNQUFNLEdBQUcsWUFBQSxDQUFBLFVBQUEsQ0FBQSxNQUFBLENBQWtCO0FBQy9CQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsYUFBYSxFQURQLEtBQUE7QUFFTkMsSUFBQUEsTUFBTSxFQUZBLEVBQUE7QUFHTkMsSUFBQUEsaUJBQWlCLEVBSFgsRUFBQTtBQUlOQyxJQUFBQSxpQkFBaUIsRUFBRUMsWUFBQUEsQ0FBQUEsVUFBQUEsQ0FBQUEsYUFBQUEsR0FBMkI7QUFKeEM7QUFEdUIsQ0FBbEIsQ0FBZjs7ZUFTZSxDQUFBLEdBQUEsUUFBQSxDQUFBLFNBQUEsRUFBQSxlQUFBLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY29sb3IgZnJvbSAnY29sb3InO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgU3R5bGVQcm9wLCBWaWV3LCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgYmxhY2ssIHdoaXRlIH0gZnJvbSAnLi4vLi4vc3R5bGVzL2NvbG9ycyc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRoUmVmPHR5cGVvZiBWaWV3PiAmIHtcbiAgLyoqXG4gICAqIENvbnRlbnQgb2YgdGhlIGBEYXRhVGFibGVIZWFkZXJgLlxuICAgKi9cbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKi9cbiAgdGhlbWU6IFJlYWN0TmF0aXZlUGFwZXIuVGhlbWU7XG59O1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHRvIGRpc3BsYXkgdGl0bGUgaW4gdGFibGUgaGVhZGVyLlxuICpcbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9kYXRhLXRhYmxlLWhlYWRlci5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiAoXG4gKiAgICAgICA8RGF0YVRhYmxlPlxuICogICAgICAgICA8RGF0YVRhYmxlLkhlYWRlcj5cbiAqICAgICAgICAgICA8RGF0YVRhYmxlLlRpdGxlXG4gKiAgICAgICAgICAgICBzb3J0RGlyZWN0aW9uPSdkZXNjZW5kaW5nJ1xuICogICAgICAgICAgID5cbiAqICAgICAgICAgICAgIERlc3NlcnRcbiAqICAgICAgICAgICA8L0RhdGFUYWJsZS5UaXRsZT5cbiAqICAgICAgICAgICA8RGF0YVRhYmxlLlRpdGxlIG51bWVyaWM+Q2Fsb3JpZXM8L0RhdGFUYWJsZS5UaXRsZT5cbiAqICAgICAgICAgICA8RGF0YVRhYmxlLlRpdGxlIG51bWVyaWM+RmF0IChnKTwvRGF0YVRhYmxlLlRpdGxlPlxuICogICAgICAgICA8L0RhdGFUYWJsZS5IZWFkZXI+XG4gKiAgICAgICA8L0RhdGFUYWJsZT5cbiAqICk7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKiBgYGBcbiAqL1xuXG5jb25zdCBEYXRhVGFibGVIZWFkZXIgPSAoeyBjaGlsZHJlbiwgc3R5bGUsIHRoZW1lLCAuLi5yZXN0IH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IGJvcmRlckJvdHRvbUNvbG9yID0gY29sb3IodGhlbWUuZGFyayA/IHdoaXRlIDogYmxhY2spXG4gICAgLmFscGhhKDAuMTIpXG4gICAgLnJnYigpXG4gICAgLnN0cmluZygpO1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXcgey4uLnJlc3R9IHN0eWxlPXtbc3R5bGVzLmhlYWRlciwgeyBib3JkZXJCb3R0b21Db2xvciB9LCBzdHlsZV19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvVmlldz5cbiAgKTtcbn07XG5cbkRhdGFUYWJsZUhlYWRlci5kaXNwbGF5TmFtZSA9ICdEYXRhVGFibGUuSGVhZGVyJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBoZWFkZXI6IHtcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBoZWlnaHQ6IDQ4LFxuICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNixcbiAgICBib3JkZXJCb3R0b21XaWR0aDogU3R5bGVTaGVldC5oYWlybGluZVdpZHRoICogMixcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoRGF0YVRhYmxlSGVhZGVyKTtcblxuLy8gQGNvbXBvbmVudC1kb2NzIGlnbm9yZS1uZXh0LWxpbmVcbmV4cG9ydCB7IERhdGFUYWJsZUhlYWRlciB9O1xuIl19