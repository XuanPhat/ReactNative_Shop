{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","style","rest","textColor","theme","font","writingDirection","I18nManager","color","textAlign"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAqD;AAAA,MAApD,KAAoD,GAAA,IAAA,CAApD,KAAoD;AAAA,MAApD,KAAoD,GAAA,IAAA,CAApD,KAAoD;AAAA,MAApD,MAAoD,GAAA,IAAA,CAApD,MAAoD;AAAA,MAA5BC,KAA4B,GAAA,IAAA,CAA5BA,KAA4B;AAAA,MAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,CAAA,CAAA;;AACtE,MAAMC,SAAS,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,KAAK,CAALA,MAAAA,CAAN,IAAA,EAAA,KAAA,CAAA,KAAA,EAAA,GAAA,GAAlB,MAAkB,EAAlB;AACA,MAAMC,IAAI,GAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb;AACA,MAAME,gBAAgB,GAAGC,YAAAA,CAAAA,WAAAA,CAAAA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,KAAA,CAAD,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CAAA,aAAA,CAAA,aAAA,CAAA;AACHC,MAAAA,KAAK,EAAEL;AADJ,KAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AACwBM,MAAAA,SAAS,EADjC,MAAA;AAC2CH,MAAAA,gBAAAA,EAAAA;AAD3C,KAAA,CAAA,EAAA,KAAA;AAFT,GAAA,CAAA,CADF;AALF,CAAA;;eAgBe,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,UAAA,C","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        { color: textColor, ...font, textAlign: 'left', writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(StyledText);\n"]}