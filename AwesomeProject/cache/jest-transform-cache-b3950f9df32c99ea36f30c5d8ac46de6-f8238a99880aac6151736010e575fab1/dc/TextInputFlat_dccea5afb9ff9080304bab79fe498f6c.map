{"version":3,"sources":["TextInputFlat.tsx"],"names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","React","disabled","error","multiline","editable","render","props","placeholderTextColor","fonts","font","hasActiveOutline","parentState","fontSize","textAlign","StyleSheet","fontSizeStyle","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","paddingHorizontal","adornmentConfig","left","right","paddingRight","paddingLeft","rightLayout","rightAffixWidth","ADORNMENT_SIZE","leftAffixWidth","leftLayout","adornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","mode","InputMode","Flat","inputTextColor","activeColor","colors","placeholderColor","underlineColorCustom","errorColor","underlineColor","containerStyle","backgroundColor","theme","borderTopLeftRadius","borderTopRightRadius","roundness","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","minInputHeight","dense","label","inputHeight","topPosition","height","console","paddingSettings","offset","scale","isAndroid","Platform","styles","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","onLayoutAnimatedText","placeholderStyle","fontWeight","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","affixTopPosition","AdornmentSide","onAffixChange","onRightAffixLayoutChange","adornmentProps","forceFocus","AdornmentType","isTextInputFocused","focused","textStyle","visible","labeled","paddingTop","paddingBottom","ref","onChangeText","placeholder","selectionColor","onFocus","onBlur","underlineColorAndroid","style","color","textAlignVertical","Underline","transform","scaleY","position","underline","bottom","input","flexGrow","margin","zIndex","inputFlat","inputFlatDense"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={{\n            paddingTop: 0,\n            paddingBottom: 0,\n            minHeight,\n          }}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            // @ts-ignore\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor || placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n});\n"]}