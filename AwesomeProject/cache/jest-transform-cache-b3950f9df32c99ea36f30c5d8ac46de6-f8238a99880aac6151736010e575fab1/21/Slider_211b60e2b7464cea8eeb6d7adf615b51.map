{"version":3,"sources":["Slider.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","TRACK_SIZE","THUMB_SIZE","TRACK_STYLE","Platform","select","web","default","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","useNativeDriver","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Math","max","min","Rect","x","y","width","height","Slider","props","measureContainer","handleMeasure","measureTrack","measureThumb","state","containerSize","trackSize","thumbSize","allMeasured","Animated","Value","panResponder","PanResponder","create","onStartShouldSetPanResponder","handleStartShouldSetPanResponder","bind","onMoveShouldSetPanResponder","handleMoveShouldSetPanResponder","onPanResponderGrant","handlePanResponderGrant","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminationRequest","handlePanResponderRequestEnd","onPanResponderTerminate","isVertical","orientation","componentDidUpdate","prevProps","force","newValue","animateTransitions","setCurrentValueAnimated","setCurrentValue","setValue","animationType","animationConfig","assign","toValue","start","_previousLeft","getThumbLeft","getCurrentValue","fireChangeEvent","_","gestureState","disabled","getValue","nativeEvent","thumbTouchRect","getThumbTouchRect","containsPoint","locationX","locationY","allowTouchTrack","thumbHitTest","getOnTouchValue","event","location","getValueForTouch","ratio","step","round","thumbTouchSize","size","getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","name","layout","layoutWidth","layoutHeight","storeName","currentSize","_containerSize","_trackSize","_thumbSize","setState","dy","dx","__getValue","getRatio","touchOverflowSize","thumbLeft","positionStyle","left","top","thumbStart","minimumTrackStyle","position","add","_a","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","containerStyle","style","trackStyle","thumbStyle","thumbProps","other","mainStyles","styles","appliedTrackStyle","StyleSheet","flatten","track","interpolate","inputRange","outputRange","valueVisibleStyle","getMinimumTrackStyles","getTouchOverflowStyle","containerVertical","containerHorizontal","trackVertical","trackHorizontal","touchArea","panHandlers","renderDebugThumbTouchRect","React","Component","SliderThumb","isVisible","onLayout","color","vertical","ThumbComponent","View","axis","thumbPosition","styleTransform","transform","visibleStyle","thumb","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n// @ts-nocheck\nimport React from 'react';\nimport { View, StyleSheet, Animated, Easing, PanResponder, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 40;\nconst TRACK_STYLE = Platform.select({ web: 0, default: -1 });\nconst DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n        friction: 7,\n        tension: 100,\n        useNativeDriver: false,\n    },\n    timing: {\n        duration: 150,\n        easing: Easing.inOut(Easing.ease),\n        delay: 0,\n        useNativeDriver: false,\n    },\n};\nconst getBoundedValue = (value, maximumValue, minimumValue) => Math.max(Math.min(value, maximumValue), minimumValue);\nclass Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    containsPoint(x, y) {\n        return (x >= this.x &&\n            y >= this.y &&\n            x <= this.x + this.width &&\n            y <= this.y + this.height);\n    }\n}\nclass Slider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.measureContainer = (x) => {\n            this.handleMeasure('containerSize', x);\n        };\n        this.measureTrack = (x) => {\n            this.handleMeasure('trackSize', x);\n        };\n        this.measureThumb = (x) => {\n            this.handleMeasure('thumbSize', x);\n        };\n        this.state = {\n            containerSize: { width: 0, height: 0 },\n            trackSize: { width: 0, height: 0 },\n            thumbSize: { width: 0, height: 0 },\n            allMeasured: false,\n            value: new Animated.Value(getBoundedValue(props.value, props.maximumValue, props.minimumValue)),\n        };\n        this.panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder.bind(this),\n            onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(this),\n            onPanResponderGrant: this.handlePanResponderGrant.bind(this),\n            onPanResponderMove: this.handlePanResponderMove.bind(this),\n            onPanResponderRelease: this.handlePanResponderEnd.bind(this),\n            onPanResponderTerminationRequest: this.handlePanResponderRequestEnd.bind(this),\n            onPanResponderTerminate: this.handlePanResponderEnd.bind(this),\n        });\n        this.isVertical = props.orientation === 'vertical';\n        this.componentDidUpdate(props, true);\n    }\n    componentDidUpdate(prevProps, force) {\n        const newValue = getBoundedValue(this.props.value, this.props.maximumValue, this.props.minimumValue);\n        if (prevProps.value !== newValue || force) {\n            if (this.props.animateTransitions) {\n                this.setCurrentValueAnimated(newValue);\n            }\n            else {\n                this.setCurrentValue(newValue);\n            }\n        }\n    }\n    setCurrentValue(value) {\n        this.state.value.setValue(value);\n    }\n    setCurrentValueAnimated(value) {\n        const { animationType } = this.props;\n        const animationConfig = Object.assign({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {\n            toValue: value,\n        });\n        Animated[animationType](this.state.value, animationConfig).start();\n    }\n    handleMoveShouldSetPanResponder() {\n        // Should we become active when the user moves a touch over the thumb?\n        return false;\n    }\n    handlePanResponderGrant() {\n        this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n        this.fireChangeEvent('onSlidingStart');\n    }\n    handlePanResponderMove(_, gestureState) {\n        if (this.props.disabled) {\n            return;\n        }\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onValueChange');\n    }\n    handlePanResponderRequestEnd() {\n        // Should we allow another component to take over this pan?\n        return false;\n    }\n    handlePanResponderEnd(_, gestureState) {\n        if (this.props.disabled) {\n            return;\n        }\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onSlidingComplete');\n    }\n    thumbHitTest({ nativeEvent }) {\n        const thumbTouchRect = this.getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n    }\n    handleStartShouldSetPanResponder(e /* gestureState: Object */) {\n        // Should we become active when the user presses down on the thumb?\n        if (!this.props.allowTouchTrack) {\n            return this.thumbHitTest(e);\n        }\n        this.setCurrentValue(this.getOnTouchValue(e));\n        this.fireChangeEvent('onValueChange');\n        return true;\n    }\n    fireChangeEvent(event) {\n        if (this.props[event]) {\n            this.props[event](this.getCurrentValue());\n        }\n    }\n    // get value of where some touched on slider.\n    getOnTouchValue({ nativeEvent }) {\n        const location = this.isVertical\n            ? nativeEvent.locationY\n            : nativeEvent.locationX;\n        return this.getValueForTouch(location);\n    }\n    getValueForTouch(location) {\n        const length = this.state.containerSize.width - this.state.thumbSize.width;\n        const ratio = location / length;\n        let newValue = ratio * (this.props.maximumValue - this.props.minimumValue);\n        if (this.props.step) {\n            newValue = Math.round(newValue / this.props.step) * this.props.step;\n        }\n        return getBoundedValue(newValue + this.props.minimumValue, this.props.maximumValue, this.props.minimumValue);\n    }\n    getTouchOverflowSize() {\n        const { thumbSize, allMeasured, containerSize } = this.state;\n        const { thumbTouchSize } = this.props;\n        const size = {};\n        if (allMeasured === true) {\n            size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n            size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n        }\n        return size;\n    }\n    getTouchOverflowStyle() {\n        const { width, height } = this.getTouchOverflowSize();\n        const touchOverflowStyle = {};\n        if (width !== undefined && height !== undefined) {\n            const verticalMargin = -height / 2;\n            touchOverflowStyle.marginTop = verticalMargin;\n            touchOverflowStyle.marginBottom = verticalMargin;\n            const horizontalMargin = -width / 2;\n            touchOverflowStyle.marginLeft = horizontalMargin;\n            touchOverflowStyle.marginRight = horizontalMargin;\n        }\n        if (this.props.debugTouchArea === true) {\n            touchOverflowStyle.backgroundColor = 'orange';\n            touchOverflowStyle.opacity = 0.5;\n        }\n        return touchOverflowStyle;\n    }\n    handleMeasure(name, x) {\n        const { width: layoutWidth, height: layoutHeight } = x.nativeEvent.layout;\n        const width = this.isVertical ? layoutHeight : layoutWidth;\n        const height = this.isVertical ? layoutWidth : layoutHeight;\n        const size = { width, height };\n        const storeName = `_${name}`;\n        const currentSize = this[storeName];\n        if (currentSize &&\n            width === currentSize.width &&\n            height === currentSize.height) {\n            return;\n        }\n        this[storeName] = size;\n        if (this._containerSize && this._trackSize && this._thumbSize) {\n            this.setState({\n                containerSize: this._containerSize,\n                trackSize: this._trackSize,\n                thumbSize: this._thumbSize,\n                allMeasured: true,\n            });\n        }\n    }\n    getValue(gestureState) {\n        const location = this._previousLeft +\n            (this.isVertical ? gestureState.dy : gestureState.dx);\n        return this.getValueForTouch(location);\n    }\n    getCurrentValue() {\n        return this.state.value.__getValue();\n    }\n    getRatio(value) {\n        return ((value - this.props.minimumValue) /\n            (this.props.maximumValue - this.props.minimumValue));\n    }\n    getThumbLeft(value) {\n        const ratio = this.getRatio(value);\n        return (ratio * (this.state.containerSize.width - this.state.thumbSize.width));\n    }\n    getThumbTouchRect() {\n        const { thumbSize, containerSize } = this.state;\n        const { thumbTouchSize } = this.props;\n        const touchOverflowSize = this.getTouchOverflowSize();\n        const height = touchOverflowSize.height / 2 +\n            (containerSize.height - thumbTouchSize.height) / 2;\n        const width = touchOverflowSize.width / 2 +\n            this.getThumbLeft(this.getCurrentValue()) +\n            (thumbSize.width - thumbTouchSize.width) / 2;\n        if (this.isVertical) {\n            return new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height);\n        }\n        return new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n    }\n    renderDebugThumbTouchRect(thumbLeft) {\n        const thumbTouchRect = this.getThumbTouchRect();\n        const positionStyle = {\n            left: thumbLeft,\n            top: thumbTouchRect.y,\n            width: thumbTouchRect.width,\n            height: thumbTouchRect.height,\n        };\n        return <Animated.View style={positionStyle} pointerEvents=\"none\"/>;\n    }\n    getMinimumTrackStyles(thumbStart) {\n        const { thumbSize, trackSize } = this.state;\n        const minimumTrackStyle = {\n            position: 'absolute',\n        };\n        if (this.isVertical) {\n            minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n            minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n        }\n        else {\n            minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n            minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n        }\n        return minimumTrackStyle;\n    }\n    getThumbPositionStyles(thumbStart) {\n        return [{ [this.isVertical ? 'translateY' : 'translateX']: thumbStart }];\n    }\n    render() {\n        const _a = this.props, { minimumValue, maximumValue, minimumTrackTintColor, maximumTrackTintColor, thumbTintColor, containerStyle, style, trackStyle, thumbStyle, thumbProps, debugTouchArea } = _a, other = __rest(_a, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"thumbProps\", \"debugTouchArea\"]);\n        const { value, containerSize, thumbSize, allMeasured } = this.state;\n        const mainStyles = containerStyle || styles;\n        const appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n        const thumbStart = value.interpolate({\n            inputRange: [minimumValue, maximumValue],\n            outputRange: [0, containerSize.width - thumbSize.width],\n        });\n        const valueVisibleStyle = {};\n        if (!allMeasured) {\n            valueVisibleStyle.height = 0;\n            valueVisibleStyle.width = 0;\n        }\n        const minimumTrackStyle = Object.assign(Object.assign(Object.assign({}, this.getMinimumTrackStyles(thumbStart)), { backgroundColor: minimumTrackTintColor }), valueVisibleStyle);\n        const touchOverflowStyle = this.getTouchOverflowStyle();\n        return (<View {...other} style={StyleSheet.flatten([\n            this.isVertical\n                ? mainStyles.containerVertical\n                : mainStyles.containerHorizontal,\n            style,\n        ])} onLayout={this.measureContainer}>\n        <View style={StyleSheet.flatten([\n            mainStyles.track,\n            this.isVertical\n                ? mainStyles.trackVertical\n                : mainStyles.trackHorizontal,\n            appliedTrackStyle,\n            { backgroundColor: maximumTrackTintColor },\n        ])} onLayout={this.measureTrack}/>\n        <Animated.View style={StyleSheet.flatten([\n            mainStyles.track,\n            this.isVertical\n                ? mainStyles.trackVertical\n                : mainStyles.trackHorizontal,\n            appliedTrackStyle,\n            minimumTrackStyle,\n        ])}/>\n        <SliderThumb isVisible={allMeasured} onLayout={this.measureThumb.bind(this)} style={thumbStyle} color={thumbTintColor} start={thumbStart} vertical={this.isVertical} {...thumbProps}/>\n        <View style={StyleSheet.flatten([styles.touchArea, touchOverflowStyle])} {...this.panResponder.panHandlers}>\n          {debugTouchArea === true &&\n            this.renderDebugThumbTouchRect(thumbStart)}\n        </View>\n      </View>);\n    }\n}\nconst SliderThumb = (_a) => {\n    var { Component, isVisible, onLayout, style, start, color, vertical } = _a, props = __rest(_a, [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"]);\n    const ThumbComponent = Component || Animated.View;\n    const axis = vertical ? 'translateY' : 'translateX';\n    const thumbPosition = [{ [axis]: start }];\n    const styleTransform = (style && style.transform) || [];\n    const visibleStyle = isVisible ? {} : { height: 0, width: 0 };\n    return (<ThumbComponent testID=\"sliderThumb\" onLayout={onLayout} style={StyleSheet.flatten([\n        Object.assign({ backgroundColor: color, transform: [...thumbPosition, ...styleTransform] }, visibleStyle),\n        styles.thumb,\n        style,\n    ])} {...props}/>);\n};\nSlider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    allowTouchTrack: false,\n    thumbTintColor: 'red',\n    thumbTouchSize: { width: THUMB_SIZE, height: THUMB_SIZE },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal',\n};\nconst styles = StyleSheet.create({\n    containerHorizontal: {\n        height: 40,\n        justifyContent: 'center',\n    },\n    containerVertical: {\n        width: 40,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    track: {\n        borderRadius: TRACK_SIZE / 2,\n    },\n    trackHorizontal: {\n        height: TRACK_SIZE,\n    },\n    trackVertical: {\n        flex: 1,\n        width: TRACK_SIZE,\n    },\n    thumb: {\n        position: 'absolute',\n        width: THUMB_SIZE,\n        height: THUMB_SIZE,\n        borderRadius: THUMB_SIZE / 2,\n    },\n    touchArea: {\n        position: 'absolute',\n        backgroundColor: 'transparent',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    debugThumbTouchArea: {\n        position: 'absolute',\n        backgroundColor: 'green',\n        opacity: 0.5,\n    },\n});\nexport { Slider };\nexport default withTheme(Slider, 'Slider');\n"]}