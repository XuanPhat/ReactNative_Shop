{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","children","rest","borderBottomColor","theme","white","black","styles","content","container","borderStyle","borderBottomWidth","StyleSheet","minHeight","paddingHorizontal","flex","flexDirection"],"mappings":";;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAyD;AAAA,MAAxD,OAAwD,GAAA,IAAA,CAAxD,OAAwD;AAAA,MAAxD,KAAwD,GAAA,IAAA,CAAxD,KAAwD;AAAA,MAAxD,KAAwD,GAAA,IAAA,CAAxD,KAAwD;AAAA,MAA/BC,QAA+B,GAAA,IAAA,CAA/BA,QAA+B;AAAA,MAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AAC5E,MAAMC,iBAAiB,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EAAMC,KAAK,CAALA,IAAAA,GAAaC,OAAAA,CAAbD,KAAAA,GAAqBE,OAAAA,CAA3B,KAAA,EAAA,KAAA,CAAA,IAAA,EAAA,GAAA,GAA1B,MAA0B,EAA1B;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,gBAAA,CAAD,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,OAAO,EAFT,OAAA;AAGE,IAAA,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAmB;AAAEJ,MAAAA,iBAAAA,EAAAA;AAAF,KAAnB,EAAA,KAAA;AAHT,GAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,GAAA,EANJ,QAMI,CALF,CADF;AANF,CAAA;;;;AAiBA,IAAMD,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EADF,OAAA;AAETC,IAAAA,iBAAiB,EAAEC,YAAAA,CAAAA,UAAAA,CAFV,aAAA;AAGTC,IAAAA,SAAS,EAHA,EAAA;AAITC,IAAAA,iBAAiB,EAAE;AAJV,GADoB;AAO/BN,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EADG,CAAA;AAEPC,IAAAA,aAAa,EAAE;AAFR;AAPsB,CAAlB,CAAf;;eAae,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,YAAA,C","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({ onPress, style, theme, children, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content}>{children}</View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]}